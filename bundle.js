(()=>{var t={478:(t,e,n)=>{"use strict";t.exports=function(t,e){t=t||document.body;var n=[.01,1/0];"distanceLimits"in(e=e||{})&&(n[0]=e.distanceLimits[0],n[1]=e.distanceLimits[1]),"zoomMin"in e&&(n[0]=e.zoomMin),"zoomMax"in e&&(n[1]=e.zoomMax);var c=r({center:e.center||[0,0,0],up:e.up||[0,1,0],eye:e.eye||[0,0,10],mode:e.mode||"orbit",distanceLimits:n}),f=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],u=0,l=t.clientWidth,d=t.clientHeight,v={view:c,element:t,delay:e.delay||16,rotateSpeed:e.rotateSpeed||1,zoomSpeed:e.zoomSpeed||1,translateSpeed:e.translateSpeed||1,flipX:!!e.flipX,flipY:!!e.flipY,modes:c.modes,tick:function(){var e=i(),n=this.delay;c.idle(e-n),c.flush(e-(100+2*n));var r=e-2*n;c.recalcMatrix(r);for(var o=!0,s=c.computedMatrix,a=0;a<16;++a)o=o&&f[a]===s[a],f[a]=s[a];var h=t.clientWidth===l&&t.clientHeight===d;return l=t.clientWidth,d=t.clientHeight,o?!h:(u=Math.exp(c.computedRadius[0]),!0)},lookAt:function(t,e,n){c.lookAt(c.lastT(),t,e,n)},rotate:function(t,e,n){c.rotate(c.lastT(),t,e,n)},pan:function(t,e,n){c.pan(c.lastT(),t,e,n)},translate:function(t,e,n){c.translate(c.lastT(),t,e,n)}};Object.defineProperties(v,{matrix:{get:function(){return c.computedMatrix},set:function(t){return c.setMatrix(c.lastT(),t),c.computedMatrix},enumerable:!0},mode:{get:function(){return c.getMode()},set:function(t){return c.setMode(t),c.getMode()},enumerable:!0},center:{get:function(){return c.computedCenter},set:function(t){return c.lookAt(c.lastT(),t),c.computedCenter},enumerable:!0},eye:{get:function(){return c.computedEye},set:function(t){return c.lookAt(c.lastT(),null,t),c.computedEye},enumerable:!0},up:{get:function(){return c.computedUp},set:function(t){return c.lookAt(c.lastT(),null,null,t),c.computedUp},enumerable:!0},distance:{get:function(){return u},set:function(t){return c.setDistance(c.lastT(),t),t},enumerable:!0},distanceLimits:{get:function(){return c.getDistanceLimits(n)},set:function(t){return c.setDistanceLimits(t),t},enumerable:!0}}),t.addEventListener("contextmenu",(function(t){return t.preventDefault(),!1}));var m=0,p=0,g={shift:!1,control:!1,alt:!1,meta:!1};function x(e,n,r,o){var s=1/t.clientHeight,a=s*(n-m),h=s*(r-p),f=v.flipX?1:-1,l=v.flipY?1:-1,d=Math.PI*v.rotateSpeed,x=i();if(1&e)o.shift?c.rotate(x,0,0,-a*d):c.rotate(x,f*d*a,-l*d*h,0);else if(2&e)c.pan(x,-v.translateSpeed*a*u,v.translateSpeed*h*u,0);else if(4&e){var M=v.zoomSpeed*h/window.innerHeight*(x-c.lastT())*50;c.pan(x,0,0,u*(Math.exp(M)-1))}m=n,p=r,g=o}return o(t,x),t.addEventListener("touchstart",(function(e){var n=a(e.changedTouches[0],t);x(0,n[0],n[1],g),x(1,n[0],n[1],g),e.preventDefault()}),!!h&&{passive:!1}),t.addEventListener("touchmove",(function(e){var n=a(e.changedTouches[0],t);x(1,n[0],n[1],g),e.preventDefault()}),!!h&&{passive:!1}),t.addEventListener("touchend",(function(e){a(e.changedTouches[0],t),x(0,m,p,g),e.preventDefault()}),!!h&&{passive:!1}),s(t,(function(t,e,n){var r=v.flipX?1:-1,o=v.flipY?1:-1,s=i();if(Math.abs(t)>Math.abs(e))c.rotate(s,0,0,-t*r*Math.PI*v.rotateSpeed/window.innerWidth);else{var a=v.zoomSpeed*o*e/window.innerHeight*(s-c.lastT())/100;c.pan(s,0,0,u*(Math.exp(a)-1))}}),!0),v};var i=n(698),r=n(991),o=n(685),s=n(232),a=n(675),h=n(795)},991:(t,e,n)=>{"use strict";t.exports=function(t){var e=(t=t||{}).eye||[0,0,1],n=t.center||[0,0,0],a=t.up||[0,1,0],h=t.distanceLimits||[0,1/0],c=t.mode||"turntable",f=i(),u=r(),l=o();return f.setDistanceLimits(h[0],h[1]),f.lookAt(0,e,n,a),u.setDistanceLimits(h[0],h[1]),u.lookAt(0,e,n,a),l.setDistanceLimits(h[0],h[1]),l.lookAt(0,e,n,a),new s({turntable:f,orbit:u,matrix:l},c)};var i=n(786),r=n(809),o=n(622);function s(t,e){this._controllerNames=Object.keys(t),this._controllerList=this._controllerNames.map((function(e){return t[e]})),this._mode=e,this._active=t[e],this._active||(this._mode="turntable",this._active=t.turntable),this.modes=this._controllerNames,this.computedMatrix=this._active.computedMatrix,this.computedEye=this._active.computedEye,this.computedUp=this._active.computedUp,this.computedCenter=this._active.computedCenter,this.computedRadius=this._active.computedRadius}var a=s.prototype;a.flush=function(t){for(var e=this._controllerList,n=0;n<e.length;++n)e[n].flush(t)},a.idle=function(t){for(var e=this._controllerList,n=0;n<e.length;++n)e[n].idle(t)},a.lookAt=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].lookAt(t,e,n,i)},a.rotate=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].rotate(t,e,n,i)},a.pan=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].pan(t,e,n,i)},a.translate=function(t,e,n,i){for(var r=this._controllerList,o=0;o<r.length;++o)r[o].translate(t,e,n,i)},a.setMatrix=function(t,e){for(var n=this._controllerList,i=0;i<n.length;++i)n[i].setMatrix(t,e)},a.setDistanceLimits=function(t,e){for(var n=this._controllerList,i=0;i<n.length;++i)n[i].setDistanceLimits(t,e)},a.setDistance=function(t,e){for(var n=this._controllerList,i=0;i<n.length;++i)n[i].setDistance(t,e)},a.recalcMatrix=function(t){this._active.recalcMatrix(t)},a.getDistance=function(t){return this._active.getDistance(t)},a.getDistanceLimits=function(t){return this._active.getDistanceLimits(t)},a.lastT=function(){return this._active.lastT()},a.setMode=function(t){if(t!==this._mode){var e=this._controllerNames.indexOf(t);if(!(e<0)){var n=this._active,i=this._controllerList[e],r=Math.max(n.lastT(),i.lastT());n.recalcMatrix(r),i.setMatrix(r,n.computedMatrix),this._active=i,this._mode=t,this.computedMatrix=this._active.computedMatrix,this.computedEye=this._active.computedEye,this.computedUp=this._active.computedUp,this.computedCenter=this._active.computedCenter,this.computedRadius=this._active.computedRadius}}},a.getMode=function(){return this._mode}},76:t=>{"use strict";function e(t,e,n,i,r){for(var o=r+1;i<=r;){var s=i+r>>>1,a=t[s];(void 0!==n?n(a,e):a-e)>=0?(o=s,r=s-1):i=s+1}return o}function n(t,e,n,i,r){for(var o=r+1;i<=r;){var s=i+r>>>1,a=t[s];(void 0!==n?n(a,e):a-e)>0?(o=s,r=s-1):i=s+1}return o}function i(t,e,n,i,r){for(var o=i-1;i<=r;){var s=i+r>>>1,a=t[s];(void 0!==n?n(a,e):a-e)<0?(o=s,i=s+1):r=s-1}return o}function r(t,e,n,i,r){for(var o=i-1;i<=r;){var s=i+r>>>1,a=t[s];(void 0!==n?n(a,e):a-e)<=0?(o=s,i=s+1):r=s-1}return o}function o(t,e,n,i,r){for(;i<=r;){var o=i+r>>>1,s=t[o],a=void 0!==n?n(s,e):s-e;if(0===a)return o;a<=0?i=o+1:r=o-1}return-1}function s(t,e,n,i,r,o){return"function"==typeof n?o(t,e,n,void 0===i?0:0|i,void 0===r?t.length-1:0|r):o(t,e,void 0,void 0===n?0:0|n,void 0===i?t.length-1:0|i)}t.exports={ge:function(t,n,i,r,o){return s(t,n,i,r,o,e)},gt:function(t,e,i,r,o){return s(t,e,i,r,o,n)},lt:function(t,e,n,r,o){return s(t,e,n,r,o,i)},le:function(t,e,n,i,o){return s(t,e,n,i,o,r)},eq:function(t,e,n,i,r){return s(t,e,n,i,r,o)}}},617:t=>{"use strict";t.exports=function(t,e,n,i,r,o){var s=r-1,a=r*r,h=s*s,c=(1+2*r)*h,f=r*h,u=a*(3-2*r),l=a*s;if(t.length){o||(o=new Array(t.length));for(var d=t.length-1;d>=0;--d)o[d]=c*t[d]+f*e[d]+u*n[d]+l*i[d];return o}return c*t+f*e+u*n+l*i},t.exports.derivative=function(t,e,n,i,r,o){var s=6*r*r-6*r,a=3*r*r-4*r+1,h=-6*r*r+6*r,c=3*r*r-2*r;if(t.length){o||(o=new Array(t.length));for(var f=t.length-1;f>=0;--f)o[f]=s*t[f]+a*e[f]+h*n[f]+c*i[f];return o}return s*t+a*e+h*n[f]+c*i}},173:(t,e,n)=>{"use strict";t.exports=function(t,e,n){switch(arguments.length){case 0:return new s([0],[0],0);case 1:return"number"==typeof t?new s(i=h(t),i,0):new s(t,h(t.length),0);case 2:var i;if("number"==typeof e)return new s(t,i=h(t.length),+e);n=0;case 3:if(t.length!==e.length)throw new Error("state and velocity lengths must match");return new s(t,e,n)}};var i=n(617),r=n(76);function o(t,e,n){return Math.min(e,Math.max(t,n))}function s(t,e,n){this.dimension=t.length,this.bounds=[new Array(this.dimension),new Array(this.dimension)];for(var i=0;i<this.dimension;++i)this.bounds[0][i]=-1/0,this.bounds[1][i]=1/0;this._state=t.slice().reverse(),this._velocity=e.slice().reverse(),this._time=[n],this._scratch=[t.slice(),t.slice(),t.slice(),t.slice(),t.slice()]}var a=s.prototype;function h(t){for(var e=new Array(t),n=0;n<t;++n)e[n]=0;return e}a.flush=function(t){var e=r.gt(this._time,t)-1;e<=0||(this._time.splice(0,e),this._state.splice(0,e*this.dimension),this._velocity.splice(0,e*this.dimension))},a.curve=function(t){var e=this._time,n=e.length,s=r.le(e,t),a=this._scratch[0],h=this._state,c=this._velocity,f=this.dimension,u=this.bounds;if(s<0)for(var l=f-1,d=0;d<f;++d,--l)a[d]=h[l];else if(s>=n-1){l=h.length-1;var v=t-e[n-1];for(d=0;d<f;++d,--l)a[d]=h[l]+v*c[l]}else{l=f*(s+1)-1;var m=e[s],p=e[s+1]-m||1,g=this._scratch[1],x=this._scratch[2],M=this._scratch[3],y=this._scratch[4],_=!0;for(d=0;d<f;++d,--l)g[d]=h[l],M[d]=c[l]*p,x[d]=h[l+f],y[d]=c[l+f]*p,_=_&&g[d]===x[d]&&M[d]===y[d]&&0===M[d];if(_)for(d=0;d<f;++d)a[d]=g[d];else i(g,M,x,y,(t-m)/p,a)}var w=u[0],b=u[1];for(d=0;d<f;++d)a[d]=o(w[d],b[d],a[d]);return a},a.dcurve=function(t){var e=this._time,n=e.length,o=r.le(e,t),s=this._scratch[0],a=this._state,h=this._velocity,c=this.dimension;if(o>=n-1)for(var f=a.length-1,u=(e[n-1],0);u<c;++u,--f)s[u]=h[f];else{f=c*(o+1)-1;var l=e[o],d=e[o+1]-l||1,v=this._scratch[1],m=this._scratch[2],p=this._scratch[3],g=this._scratch[4],x=!0;for(u=0;u<c;++u,--f)v[u]=a[f],p[u]=h[f]*d,m[u]=a[f+c],g[u]=h[f+c]*d,x=x&&v[u]===m[u]&&p[u]===g[u]&&0===p[u];if(x)for(u=0;u<c;++u)s[u]=0;else for(i.derivative(v,p,m,g,(t-l)/d,s),u=0;u<c;++u)s[u]/=d}return s},a.lastT=function(){var t=this._time;return t[t.length-1]},a.stable=function(){for(var t=this._velocity,e=t.length,n=this.dimension-1;n>=0;--n)if(t[--e])return!1;return!0},a.jump=function(t){var e=this.lastT(),n=this.dimension;if(!(t<e||arguments.length!==n+1)){var i=this._state,r=this._velocity,s=i.length-this.dimension,a=this.bounds,h=a[0],c=a[1];this._time.push(e,t);for(var f=0;f<2;++f)for(var u=0;u<n;++u)i.push(i[s++]),r.push(0);for(this._time.push(t),u=n;u>0;--u)i.push(o(h[u-1],c[u-1],arguments[u])),r.push(0)}},a.push=function(t){var e=this.lastT(),n=this.dimension;if(!(t<e||arguments.length!==n+1)){var i=this._state,r=this._velocity,s=i.length-this.dimension,a=t-e,h=this.bounds,c=h[0],f=h[1],u=a>1e-6?1/a:0;this._time.push(t);for(var l=n;l>0;--l){var d=o(c[l-1],f[l-1],arguments[l]);i.push(d),r.push((d-i[s++])*u)}}},a.set=function(t){var e=this.dimension;if(!(t<this.lastT()||arguments.length!==e+1)){var n=this._state,i=this._velocity,r=this.bounds,s=r[0],a=r[1];this._time.push(t);for(var h=e;h>0;--h)n.push(o(s[h-1],a[h-1],arguments[h])),i.push(0)}},a.move=function(t){var e=this.lastT(),n=this.dimension;if(!(t<=e||arguments.length!==n+1)){var i=this._state,r=this._velocity,s=i.length-this.dimension,a=this.bounds,h=a[0],c=a[1],f=t-e,u=f>1e-6?1/f:0;this._time.push(t);for(var l=n;l>0;--l){var d=arguments[l];i.push(o(h[l-1],c[l-1],i[s++]+d)),r.push(d*u)}}},a.idle=function(t){var e=this.lastT();if(!(t<e)){var n=this.dimension,i=this._state,r=this._velocity,s=i.length-n,a=this.bounds,h=a[0],c=a[1],f=t-e;this._time.push(t);for(var u=n-1;u>=0;--u)i.push(o(h[u],c[u],i[s]+f*r[s])),r.push(0),s+=1}}},447:t=>{t.exports=function(t){var e=new Float32Array(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}},252:t=>{t.exports=function(){var t=new Float32Array(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}},594:t=>{t.exports=function(t){var e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],s=t[5],a=t[6],h=t[7],c=t[8],f=t[9],u=t[10],l=t[11],d=t[12],v=t[13],m=t[14],p=t[15];return(e*s-n*o)*(u*p-l*m)-(e*a-i*o)*(f*p-l*v)+(e*h-r*o)*(f*m-u*v)+(n*a-i*s)*(c*p-l*d)-(n*h-r*s)*(c*m-u*d)+(i*h-r*a)*(c*v-f*d)}},127:t=>{t.exports=function(t,e){var n=e[0],i=e[1],r=e[2],o=e[3],s=n+n,a=i+i,h=r+r,c=n*s,f=i*s,u=i*a,l=r*s,d=r*a,v=r*h,m=o*s,p=o*a,g=o*h;return t[0]=1-u-v,t[1]=f+g,t[2]=l-p,t[3]=0,t[4]=f-g,t[5]=1-c-v,t[6]=d+m,t[7]=0,t[8]=l+p,t[9]=d-m,t[10]=1-c-u,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}},872:t=>{t.exports=function(t,e,n){var i=e[0],r=e[1],o=e[2],s=e[3],a=i+i,h=r+r,c=o+o,f=i*a,u=i*h,l=i*c,d=r*h,v=r*c,m=o*c,p=s*a,g=s*h,x=s*c;return t[0]=1-(d+m),t[1]=u+x,t[2]=l-g,t[3]=0,t[4]=u-x,t[5]=1-(f+m),t[6]=v+p,t[7]=0,t[8]=l+g,t[9]=v-p,t[10]=1-(f+d),t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t}},312:t=>{t.exports=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}},481:t=>{t.exports=function(t,e){var n=e[0],i=e[1],r=e[2],o=e[3],s=e[4],a=e[5],h=e[6],c=e[7],f=e[8],u=e[9],l=e[10],d=e[11],v=e[12],m=e[13],p=e[14],g=e[15],x=n*a-i*s,M=n*h-r*s,y=n*c-o*s,_=i*h-r*a,w=i*c-o*a,b=r*c-o*h,E=f*m-u*v,A=f*p-l*v,T=f*g-d*v,R=u*p-l*m,L=u*g-d*m,D=l*g-d*p,C=x*D-M*L+y*R+_*T-w*A+b*E;return C?(C=1/C,t[0]=(a*D-h*L+c*R)*C,t[1]=(r*L-i*D-o*R)*C,t[2]=(m*b-p*w+g*_)*C,t[3]=(l*w-u*b-d*_)*C,t[4]=(h*T-s*D-c*A)*C,t[5]=(n*D-r*T+o*A)*C,t[6]=(p*y-v*b-g*M)*C,t[7]=(f*b-l*y+d*M)*C,t[8]=(s*L-a*T+c*E)*C,t[9]=(i*T-n*L-o*E)*C,t[10]=(v*w-m*y+g*x)*C,t[11]=(u*y-f*w-d*x)*C,t[12]=(a*A-s*R-h*E)*C,t[13]=(n*R-i*A+r*E)*C,t[14]=(m*M-v*_-p*x)*C,t[15]=(f*_-u*M+l*x)*C,t):null}},727:(t,e,n)=>{var i=n(312);t.exports=function(t,e,n,r){var o,s,a,h,c,f,u,l,d,v,m=e[0],p=e[1],g=e[2],x=r[0],M=r[1],y=r[2],_=n[0],w=n[1],b=n[2];return Math.abs(m-_)<1e-6&&Math.abs(p-w)<1e-6&&Math.abs(g-b)<1e-6?i(t):(u=m-_,l=p-w,d=g-b,o=M*(d*=v=1/Math.sqrt(u*u+l*l+d*d))-y*(l*=v),s=y*(u*=v)-x*d,a=x*l-M*u,(v=Math.sqrt(o*o+s*s+a*a))?(o*=v=1/v,s*=v,a*=v):(o=0,s=0,a=0),h=l*a-d*s,c=d*o-u*a,f=u*s-l*o,(v=Math.sqrt(h*h+c*c+f*f))?(h*=v=1/v,c*=v,f*=v):(h=0,c=0,f=0),t[0]=o,t[1]=h,t[2]=u,t[3]=0,t[4]=s,t[5]=c,t[6]=l,t[7]=0,t[8]=a,t[9]=f,t[10]=d,t[11]=0,t[12]=-(o*m+s*p+a*g),t[13]=-(h*m+c*p+f*g),t[14]=-(u*m+l*p+d*g),t[15]=1,t)}},401:t=>{t.exports=function(t,e,n){var i=e[0],r=e[1],o=e[2],s=e[3],a=e[4],h=e[5],c=e[6],f=e[7],u=e[8],l=e[9],d=e[10],v=e[11],m=e[12],p=e[13],g=e[14],x=e[15],M=n[0],y=n[1],_=n[2],w=n[3];return t[0]=M*i+y*a+_*u+w*m,t[1]=M*r+y*h+_*l+w*p,t[2]=M*o+y*c+_*d+w*g,t[3]=M*s+y*f+_*v+w*x,M=n[4],y=n[5],_=n[6],w=n[7],t[4]=M*i+y*a+_*u+w*m,t[5]=M*r+y*h+_*l+w*p,t[6]=M*o+y*c+_*d+w*g,t[7]=M*s+y*f+_*v+w*x,M=n[8],y=n[9],_=n[10],w=n[11],t[8]=M*i+y*a+_*u+w*m,t[9]=M*r+y*h+_*l+w*p,t[10]=M*o+y*c+_*d+w*g,t[11]=M*s+y*f+_*v+w*x,M=n[12],y=n[13],_=n[14],w=n[15],t[12]=M*i+y*a+_*u+w*m,t[13]=M*r+y*h+_*l+w*p,t[14]=M*o+y*c+_*d+w*g,t[15]=M*s+y*f+_*v+w*x,t}},397:t=>{t.exports=function(t,e,n,i){var r,o,s,a,h,c,f,u,l,d,v,m,p,g,x,M,y,_,w,b,E,A,T,R,L=i[0],D=i[1],C=i[2],P=Math.sqrt(L*L+D*D+C*C);return Math.abs(P)<1e-6?null:(L*=P=1/P,D*=P,C*=P,r=Math.sin(n),s=1-(o=Math.cos(n)),a=e[0],h=e[1],c=e[2],f=e[3],u=e[4],l=e[5],d=e[6],v=e[7],m=e[8],p=e[9],g=e[10],x=e[11],M=L*L*s+o,y=D*L*s+C*r,_=C*L*s-D*r,w=L*D*s-C*r,b=D*D*s+o,E=C*D*s+L*r,A=L*C*s+D*r,T=D*C*s-L*r,R=C*C*s+o,t[0]=a*M+u*y+m*_,t[1]=h*M+l*y+p*_,t[2]=c*M+d*y+g*_,t[3]=f*M+v*y+x*_,t[4]=a*w+u*b+m*E,t[5]=h*w+l*b+p*E,t[6]=c*w+d*b+g*E,t[7]=f*w+v*b+x*E,t[8]=a*A+u*T+m*R,t[9]=h*A+l*T+p*R,t[10]=c*A+d*T+g*R,t[11]=f*A+v*T+x*R,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)}},663:t=>{t.exports=function(t,e,n){var i=Math.sin(n),r=Math.cos(n),o=e[4],s=e[5],a=e[6],h=e[7],c=e[8],f=e[9],u=e[10],l=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=o*r+c*i,t[5]=s*r+f*i,t[6]=a*r+u*i,t[7]=h*r+l*i,t[8]=c*r-o*i,t[9]=f*r-s*i,t[10]=u*r-a*i,t[11]=l*r-h*i,t}},113:t=>{t.exports=function(t,e,n){var i=Math.sin(n),r=Math.cos(n),o=e[0],s=e[1],a=e[2],h=e[3],c=e[8],f=e[9],u=e[10],l=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*r-c*i,t[1]=s*r-f*i,t[2]=a*r-u*i,t[3]=h*r-l*i,t[8]=o*i+c*r,t[9]=s*i+f*r,t[10]=a*i+u*r,t[11]=h*i+l*r,t}},974:t=>{t.exports=function(t,e,n){var i=Math.sin(n),r=Math.cos(n),o=e[0],s=e[1],a=e[2],h=e[3],c=e[4],f=e[5],u=e[6],l=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*r+c*i,t[1]=s*r+f*i,t[2]=a*r+u*i,t[3]=h*r+l*i,t[4]=c*r-o*i,t[5]=f*r-s*i,t[6]=u*r-a*i,t[7]=l*r-h*i,t}},28:t=>{t.exports=function(t,e,n){var i=n[0],r=n[1],o=n[2];return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*r,t[5]=e[5]*r,t[6]=e[6]*r,t[7]=e[7]*r,t[8]=e[8]*o,t[9]=e[9]*o,t[10]=e[10]*o,t[11]=e[11]*o,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}},602:t=>{t.exports=function(t,e,n){var i,r,o,s,a,h,c,f,u,l,d,v,m=n[0],p=n[1],g=n[2];return e===t?(t[12]=e[0]*m+e[4]*p+e[8]*g+e[12],t[13]=e[1]*m+e[5]*p+e[9]*g+e[13],t[14]=e[2]*m+e[6]*p+e[10]*g+e[14],t[15]=e[3]*m+e[7]*p+e[11]*g+e[15]):(i=e[0],r=e[1],o=e[2],s=e[3],a=e[4],h=e[5],c=e[6],f=e[7],u=e[8],l=e[9],d=e[10],v=e[11],t[0]=i,t[1]=r,t[2]=o,t[3]=s,t[4]=a,t[5]=h,t[6]=c,t[7]=f,t[8]=u,t[9]=l,t[10]=d,t[11]=v,t[12]=i*m+a*p+u*g+e[12],t[13]=r*m+h*p+l*g+e[13],t[14]=o*m+c*p+d*g+e[14],t[15]=s*m+f*p+v*g+e[15]),t}},683:t=>{t.exports=function(t,e){if(t===e){var n=e[1],i=e[2],r=e[3],o=e[6],s=e[7],a=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=n,t[6]=e[9],t[7]=e[13],t[8]=i,t[9]=o,t[11]=e[14],t[12]=r,t[13]=s,t[14]=a}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t}},600:t=>{t.exports=function(t,e,n,i){var r,o,s,a,h,c=e[0],f=e[1],u=e[2],l=e[3],d=n[0],v=n[1],m=n[2],p=n[3];return(o=c*d+f*v+u*m+l*p)<0&&(o=-o,d=-d,v=-v,m=-m,p=-p),1-o>1e-6?(r=Math.acos(o),s=Math.sin(r),a=Math.sin((1-i)*r)/s,h=Math.sin(i*r)/s):(a=1-i,h=i),t[0]=a*c+h*d,t[1]=a*f+h*v,t[2]=a*u+h*m,t[3]=a*l+h*p,t}},858:t=>{t.exports=function(t,e,n){var i=e[0],r=e[1],o=e[2],s=n[0],a=n[1],h=n[2];return t[0]=r*h-o*a,t[1]=o*s-i*h,t[2]=i*a-r*s,t}},368:t=>{t.exports=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}},563:t=>{t.exports=function(t){var e=t[0],n=t[1],i=t[2];return Math.sqrt(e*e+n*n+i*i)}},919:t=>{t.exports=function(t,e,n,i){var r=e[0],o=e[1],s=e[2];return t[0]=r+i*(n[0]-r),t[1]=o+i*(n[1]-o),t[2]=s+i*(n[2]-s),t}},91:t=>{t.exports=function(t,e){var n=e[0],i=e[1],r=e[2],o=n*n+i*i+r*r;return o>0&&(o=1/Math.sqrt(o),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o),t}},795:(t,e,n)=>{"use strict";var i=n(33);t.exports=i&&function(){var t=!1;try{var e=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("test",null,e),window.removeEventListener("test",null,e)}catch(e){t=!1}return t}()},33:t=>{t.exports=!0},805:(t,e,n)=>{var i=n(604),r=n(252),o=n(447),s=n(594),a=n(481),h=n(683),c={length:n(563),normalize:n(91),dot:n(368),cross:n(858)},f=r(),u=r(),l=[0,0,0,0],d=[[0,0,0],[0,0,0],[0,0,0]],v=[0,0,0];function m(t,e,n,i,r){t[0]=e[0]*i+n[0]*r,t[1]=e[1]*i+n[1]*r,t[2]=e[2]*i+n[2]*r}t.exports=function(t,e,n,r,p,g){if(e||(e=[0,0,0]),n||(n=[0,0,0]),r||(r=[0,0,0]),p||(p=[0,0,0,1]),g||(g=[0,0,0,1]),!i(f,t))return!1;if(o(u,f),u[3]=0,u[7]=0,u[11]=0,u[15]=1,Math.abs(s(u)<1e-8))return!1;var x,M,y,_,w,b,E,A=f[3],T=f[7],R=f[11],L=f[12],D=f[13],C=f[14],P=f[15];if(0!==A||0!==T||0!==R){if(l[0]=A,l[1]=T,l[2]=R,l[3]=P,!a(u,u))return!1;h(u,u),x=p,y=u,_=(M=l)[0],w=M[1],b=M[2],E=M[3],x[0]=y[0]*_+y[4]*w+y[8]*b+y[12]*E,x[1]=y[1]*_+y[5]*w+y[9]*b+y[13]*E,x[2]=y[2]*_+y[6]*w+y[10]*b+y[14]*E,x[3]=y[3]*_+y[7]*w+y[11]*b+y[15]*E}else p[0]=p[1]=p[2]=0,p[3]=1;if(e[0]=L,e[1]=D,e[2]=C,function(t,e){t[0][0]=e[0],t[0][1]=e[1],t[0][2]=e[2],t[1][0]=e[4],t[1][1]=e[5],t[1][2]=e[6],t[2][0]=e[8],t[2][1]=e[9],t[2][2]=e[10]}(d,f),n[0]=c.length(d[0]),c.normalize(d[0],d[0]),r[0]=c.dot(d[0],d[1]),m(d[1],d[1],d[0],1,-r[0]),n[1]=c.length(d[1]),c.normalize(d[1],d[1]),r[0]/=n[1],r[1]=c.dot(d[0],d[2]),m(d[2],d[2],d[0],1,-r[1]),r[2]=c.dot(d[1],d[2]),m(d[2],d[2],d[1],1,-r[2]),n[2]=c.length(d[2]),c.normalize(d[2],d[2]),r[1]/=n[2],r[2]/=n[2],c.cross(v,d[1],d[2]),c.dot(d[0],v)<0)for(var F=0;F<3;F++)n[F]*=-1,d[F][0]*=-1,d[F][1]*=-1,d[F][2]*=-1;return g[0]=.5*Math.sqrt(Math.max(1+d[0][0]-d[1][1]-d[2][2],0)),g[1]=.5*Math.sqrt(Math.max(1-d[0][0]+d[1][1]-d[2][2],0)),g[2]=.5*Math.sqrt(Math.max(1-d[0][0]-d[1][1]+d[2][2],0)),g[3]=.5*Math.sqrt(Math.max(1+d[0][0]+d[1][1]+d[2][2],0)),d[2][1]>d[1][2]&&(g[0]=-g[0]),d[0][2]>d[2][0]&&(g[1]=-g[1]),d[1][0]>d[0][1]&&(g[2]=-g[2]),!0}},604:t=>{t.exports=function(t,e){var n=e[15];if(0===n)return!1;for(var i=1/n,r=0;r<16;r++)t[r]=e[r]*i;return!0}},726:(t,e,n)=>{var i=n(919),r=n(814),o=n(805),s=n(594),a=n(210),h=u(),c=u(),f=u();function u(){return{translate:l(),scale:l(1),skew:l(),perspective:[0,0,0,1],quaternion:[0,0,0,1]}}function l(t){return[t||0,t||0,t||0]}t.exports=function(t,e,n,u){if(0===s(e)||0===s(n))return!1;var l=o(e,h.translate,h.scale,h.skew,h.perspective,h.quaternion),d=o(n,c.translate,c.scale,c.skew,c.perspective,c.quaternion);return!(!l||!d||(i(f.translate,h.translate,c.translate,u),i(f.skew,h.skew,c.skew,u),i(f.scale,h.scale,c.scale,u),i(f.perspective,h.perspective,c.perspective,u),a(f.quaternion,h.quaternion,c.quaternion,u),r(t,f.translate,f.scale,f.skew,f.perspective,f.quaternion),0))}},814:(t,e,n)=>{var i={identity:n(312),translate:n(602),multiply:n(401),create:n(252),scale:n(28),fromRotationTranslation:n(872)},r=(i.create(),i.create());t.exports=function(t,e,n,o,s,a){return i.identity(t),i.fromRotationTranslation(t,a,e),t[3]=s[0],t[7]=s[1],t[11]=s[2],t[15]=s[3],i.identity(r),0!==o[2]&&(r[9]=o[2],i.multiply(t,t,r)),0!==o[1]&&(r[9]=0,r[8]=o[1],i.multiply(t,t,r)),0!==o[0]&&(r[8]=0,r[4]=o[0],i.multiply(t,t,r)),i.scale(t,t,n),t}},622:(t,e,n)=>{"use strict";var i=n(76),r=n(726),o=n(481),s=n(663),a=n(113),h=n(974),c=n(727),f=n(602),u=(n(28),n(91)),l=[0,0,0];function d(t){this._components=t.slice(),this._time=[0],this.prevMatrix=t.slice(),this.nextMatrix=t.slice(),this.computedMatrix=t.slice(),this.computedInverse=t.slice(),this.computedEye=[0,0,0],this.computedUp=[0,0,0],this.computedCenter=[0,0,0],this.computedRadius=[0],this._limits=[-1/0,1/0]}t.exports=function(t){return new d((t=t||{}).matrix||[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])};var v=d.prototype;v.recalcMatrix=function(t){var e=this._time,n=i.le(e,t),s=this.computedMatrix;if(!(n<0)){var a=this._components;if(n===e.length-1)for(var h=16*n,c=0;c<16;++c)s[c]=a[h++];else{var f=e[n+1]-e[n],l=(h=16*n,this.prevMatrix),d=!0;for(c=0;c<16;++c)l[c]=a[h++];var v=this.nextMatrix;for(c=0;c<16;++c)v[c]=a[h++],d=d&&l[c]===v[c];if(f<1e-6||d)for(c=0;c<16;++c)s[c]=l[c];else r(s,l,v,(t-e[n])/f)}var m=this.computedUp;m[0]=s[1],m[1]=s[5],m[2]=s[9],u(m,m);var p=this.computedInverse;o(p,s);var g=this.computedEye,x=p[15];g[0]=p[12]/x,g[1]=p[13]/x,g[2]=p[14]/x;var M=this.computedCenter,y=Math.exp(this.computedRadius[0]);for(c=0;c<3;++c)M[c]=g[c]-s[2+4*c]*y}},v.idle=function(t){if(!(t<this.lastT())){for(var e=this._components,n=e.length-16,i=0;i<16;++i)e.push(e[n++]);this._time.push(t)}},v.flush=function(t){var e=i.gt(this._time,t)-2;e<0||(this._time.splice(0,e),this._components.splice(0,16*e))},v.lastT=function(){return this._time[this._time.length-1]},v.lookAt=function(t,e,n,i){this.recalcMatrix(t),e=e||this.computedEye,n=n||l,i=i||this.computedUp,this.setMatrix(t,c(this.computedMatrix,e,n,i));for(var r=0,o=0;o<3;++o)r+=Math.pow(n[o]-e[o],2);r=Math.log(Math.sqrt(r)),this.computedRadius[0]=r},v.rotate=function(t,e,n,i){this.recalcMatrix(t);var r=this.computedInverse;e&&a(r,r,e),n&&s(r,r,n),i&&h(r,r,i),this.setMatrix(t,o(this.computedMatrix,r))};var m=[0,0,0];v.pan=function(t,e,n,i){m[0]=-(e||0),m[1]=-(n||0),m[2]=-(i||0),this.recalcMatrix(t);var r=this.computedInverse;f(r,r,m),this.setMatrix(t,o(r,r))},v.translate=function(t,e,n,i){m[0]=e||0,m[1]=n||0,m[2]=i||0,this.recalcMatrix(t);var r=this.computedMatrix;f(r,r,m),this.setMatrix(t,r)},v.setMatrix=function(t,e){if(!(t<this.lastT())){this._time.push(t);for(var n=0;n<16;++n)this._components.push(e[n])}},v.setDistance=function(t,e){this.computedRadius[0]=e},v.setDistanceLimits=function(t,e){var n=this._limits;n[0]=t,n[1]=e},v.getDistanceLimits=function(t){var e=this._limits;return t?(t[0]=e[0],t[1]=e[1],t):e}},685:(t,e,n)=>{"use strict";t.exports=function(t,e){e||(e=t,t=window);var n=0,r=0,o=0,s={shift:!1,alt:!1,control:!1,meta:!1},a=!1;function h(t){var e=!1;return"altKey"in t&&(e=e||t.altKey!==s.alt,s.alt=!!t.altKey),"shiftKey"in t&&(e=e||t.shiftKey!==s.shift,s.shift=!!t.shiftKey),"ctrlKey"in t&&(e=e||t.ctrlKey!==s.control,s.control=!!t.ctrlKey),"metaKey"in t&&(e=e||t.metaKey!==s.meta,s.meta=!!t.metaKey),e}function c(t,a){var c=i.x(a),f=i.y(a);"buttons"in a&&(t=0|a.buttons),(t!==n||c!==r||f!==o||h(a))&&(n=0|t,r=c||0,o=f||0,e&&e(n,r,o,s))}function f(t){c(0,t)}function u(){(n||r||o||s.shift||s.alt||s.meta||s.control)&&(r=o=0,n=0,s.shift=s.alt=s.control=s.meta=!1,e&&e(0,0,0,s))}function l(t){h(t)&&e&&e(n,r,o,s)}function d(t){0===i.buttons(t)?c(0,t):c(n,t)}function v(t){c(n|i.buttons(t),t)}function m(t){c(n&~i.buttons(t),t)}function p(){a||(a=!0,t.addEventListener("mousemove",d),t.addEventListener("mousedown",v),t.addEventListener("mouseup",m),t.addEventListener("mouseleave",f),t.addEventListener("mouseenter",f),t.addEventListener("mouseout",f),t.addEventListener("mouseover",f),t.addEventListener("blur",u),t.addEventListener("keyup",l),t.addEventListener("keydown",l),t.addEventListener("keypress",l),t!==window&&(window.addEventListener("blur",u),window.addEventListener("keyup",l),window.addEventListener("keydown",l),window.addEventListener("keypress",l)))}p();var g={element:t};return Object.defineProperties(g,{enabled:{get:function(){return a},set:function(e){e?p():a&&(a=!1,t.removeEventListener("mousemove",d),t.removeEventListener("mousedown",v),t.removeEventListener("mouseup",m),t.removeEventListener("mouseleave",f),t.removeEventListener("mouseenter",f),t.removeEventListener("mouseout",f),t.removeEventListener("mouseover",f),t.removeEventListener("blur",u),t.removeEventListener("keyup",l),t.removeEventListener("keydown",l),t.removeEventListener("keypress",l),t!==window&&(window.removeEventListener("blur",u),window.removeEventListener("keyup",l),window.removeEventListener("keydown",l),window.removeEventListener("keypress",l)))},enumerable:!0},buttons:{get:function(){return n},enumerable:!0},x:{get:function(){return r},enumerable:!0},y:{get:function(){return o},enumerable:!0},mods:{get:function(){return s},enumerable:!0}}),g};var i=n(294)},675:t=>{var e={left:0,top:0};t.exports=function(t,n,i){n=n||t.currentTarget||t.srcElement,Array.isArray(i)||(i=[0,0]);var r,o=t.clientX||0,s=t.clientY||0,a=(r=n)===window||r===document||r===document.body?e:r.getBoundingClientRect();return i[0]=o-a.left,i[1]=s-a.top,i}},294:(t,e)=>{"use strict";function n(t){return t.target||t.srcElement||window}e.buttons=function(t){if("object"==typeof t){if("buttons"in t)return t.buttons;if("which"in t){if(2===(e=t.which))return 4;if(3===e)return 2;if(e>0)return 1<<e-1}else if("button"in t){var e;if(1===(e=t.button))return 4;if(2===e)return 2;if(e>=0)return 1<<e}}return 0},e.element=n,e.x=function(t){if("object"==typeof t){if("offsetX"in t)return t.offsetX;var e=n(t).getBoundingClientRect();return t.clientX-e.left}return 0},e.y=function(t){if("object"==typeof t){if("offsetY"in t)return t.offsetY;var e=n(t).getBoundingClientRect();return t.clientY-e.top}return 0}},232:(t,e,n)=>{"use strict";var i=n(810);t.exports=function(t,e,n){"function"==typeof t&&(n=!!e,e=t,t=window);var r=i("ex",t),o=function(t){n&&t.preventDefault();var i=t.deltaX||0,o=t.deltaY||0,s=t.deltaZ||0,a=1;switch(t.deltaMode){case 1:a=r;break;case 2:a=window.innerHeight}if(o*=a,s*=a,(i*=a)||o||s)return e(i,o,s,t)};return t.addEventListener("wheel",o),o}},918:t=>{"use strict";t.exports=function(t,e,n,i,r,o,s,a,h,c){var f=e+o+c;if(u>0){var u=Math.sqrt(f+1);t[0]=.5*(s-h)/u,t[1]=.5*(a-i)/u,t[2]=.5*(n-o)/u,t[3]=.5*u}else{var l=Math.max(e,o,c);u=Math.sqrt(2*l-f+1),e>=l?(t[0]=.5*u,t[1]=.5*(r+n)/u,t[2]=.5*(a+i)/u,t[3]=.5*(s-h)/u):o>=l?(t[0]=.5*(n+r)/u,t[1]=.5*u,t[2]=.5*(h+s)/u,t[3]=.5*(a-i)/u):(t[0]=.5*(i+a)/u,t[1]=.5*(s+h)/u,t[2]=.5*u,t[3]=.5*(n-r)/u)}return t}},809:(t,e,n)=>{"use strict";t.exports=function(t){var e=(t=t||{}).center||[0,0,0],n=t.rotation||[0,0,0,1],i=t.radius||1;e=[].slice.call(e,0,3),f(n=[].slice.call(n,0,4),n);var r=new u(n,e,Math.log(i));return r.setDistanceLimits(t.zoomMin,t.zoomMax),("eye"in t||"up"in t)&&r.lookAt(0,t.eye,t.center,t.up),r};var i=n(173),r=n(727),o=n(127),s=n(481),a=n(918);function h(t,e,n){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2)+Math.pow(n,2))}function c(t,e,n,i){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2)+Math.pow(n,2)+Math.pow(i,2))}function f(t,e){var n=e[0],i=e[1],r=e[2],o=e[3],s=c(n,i,r,o);s>1e-6?(t[0]=n/s,t[1]=i/s,t[2]=r/s,t[3]=o/s):(t[0]=t[1]=t[2]=0,t[3]=1)}function u(t,e,n){this.radius=i([n]),this.center=i(e),this.rotation=i(t),this.computedRadius=this.radius.curve(0),this.computedCenter=this.center.curve(0),this.computedRotation=this.rotation.curve(0),this.computedUp=[.1,0,0],this.computedEye=[.1,0,0],this.computedMatrix=[.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.recalcMatrix(0)}var l=u.prototype;l.lastT=function(){return Math.max(this.radius.lastT(),this.center.lastT(),this.rotation.lastT())},l.recalcMatrix=function(t){this.radius.curve(t),this.center.curve(t),this.rotation.curve(t);var e=this.computedRotation;f(e,e);var n=this.computedMatrix;o(n,e);var i=this.computedCenter,r=this.computedEye,s=this.computedUp,a=Math.exp(this.computedRadius[0]);r[0]=i[0]+a*n[2],r[1]=i[1]+a*n[6],r[2]=i[2]+a*n[10],s[0]=n[1],s[1]=n[5],s[2]=n[9];for(var h=0;h<3;++h){for(var c=0,u=0;u<3;++u)c+=n[h+4*u]*r[u];n[12+h]=-c}},l.getMatrix=function(t,e){this.recalcMatrix(t);var n=this.computedMatrix;if(e){for(var i=0;i<16;++i)e[i]=n[i];return e}return n},l.idle=function(t){this.center.idle(t),this.radius.idle(t),this.rotation.idle(t)},l.flush=function(t){this.center.flush(t),this.radius.flush(t),this.rotation.flush(t)},l.pan=function(t,e,n,i){e=e||0,n=n||0,i=i||0,this.recalcMatrix(t);var r=this.computedMatrix,o=r[1],s=r[5],a=r[9],c=h(o,s,a);o/=c,s/=c,a/=c;var f=r[0],u=r[4],l=r[8],d=f*o+u*s+l*a,v=h(f-=o*d,u-=s*d,l-=a*d);f/=v,u/=v,l/=v;var m=r[2],p=r[6],g=r[10],x=m*o+p*s+g*a,M=m*f+p*u+g*l,y=h(m-=x*o+M*f,p-=x*s+M*u,g-=x*a+M*l);m/=y,p/=y,g/=y;var _=f*e+o*n,w=u*e+s*n,b=l*e+a*n;this.center.move(t,_,w,b);var E=Math.exp(this.computedRadius[0]);E=Math.max(1e-4,E+i),this.radius.set(t,Math.log(E))},l.rotate=function(t,e,n,i){this.recalcMatrix(t),e=e||0,n=n||0;var r=this.computedMatrix,o=r[0],s=r[4],a=r[8],f=r[1],u=r[5],l=r[9],d=r[2],v=r[6],m=r[10],p=e*o+n*f,g=e*s+n*u,x=e*a+n*l,M=-(v*x-m*g),y=-(m*p-d*x),_=-(d*g-v*p),w=Math.sqrt(Math.max(0,1-Math.pow(M,2)-Math.pow(y,2)-Math.pow(_,2))),b=c(M,y,_,w);b>1e-6?(M/=b,y/=b,_/=b,w/=b):(M=y=_=0,w=1);var E=this.computedRotation,A=E[0],T=E[1],R=E[2],L=E[3],D=A*w+L*M+T*_-R*y,C=T*w+L*y+R*M-A*_,P=R*w+L*_+A*y-T*M,F=L*w-A*M-T*y-R*_;if(i){M=d,y=v,_=m;var B=Math.sin(i)/h(M,y,_);M*=B,y*=B,_*=B,F=F*(w=Math.cos(e))-(D=D*w+F*M+C*_-P*y)*M-(C=C*w+F*y+P*M-D*_)*y-(P=P*w+F*_+D*y-C*M)*_}var U=c(D,C,P,F);U>1e-6?(D/=U,C/=U,P/=U,F/=U):(D=C=P=0,F=1),this.rotation.set(t,D,C,P,F)},l.lookAt=function(t,e,n,i){this.recalcMatrix(t),n=n||this.computedCenter,e=e||this.computedEye,i=i||this.computedUp;var o=this.computedMatrix;r(o,e,n,i);var s=this.computedRotation;a(s,o[0],o[1],o[2],o[4],o[5],o[6],o[8],o[9],o[10]),f(s,s),this.rotation.set(t,s[0],s[1],s[2],s[3]);for(var h=0,c=0;c<3;++c)h+=Math.pow(n[c]-e[c],2);this.radius.set(t,.5*Math.log(Math.max(h,1e-6))),this.center.set(t,n[0],n[1],n[2])},l.translate=function(t,e,n,i){this.center.move(t,e||0,n||0,i||0)},l.setMatrix=function(t,e){var n=this.computedRotation;a(n,e[0],e[1],e[2],e[4],e[5],e[6],e[8],e[9],e[10]),f(n,n),this.rotation.set(t,n[0],n[1],n[2],n[3]);var i=this.computedMatrix;s(i,e);var r=i[15];if(Math.abs(r)>1e-6){var o=i[12]/r,h=i[13]/r,c=i[14]/r;this.recalcMatrix(t);var u=Math.exp(this.computedRadius[0]);this.center.set(t,o-i[2]*u,h-i[6]*u,c-i[10]*u),this.radius.idle(t)}else this.center.idle(t),this.radius.idle(t)},l.setDistance=function(t,e){e>0&&this.radius.set(t,Math.log(e))},l.setDistanceLimits=function(t,e){t=t>0?Math.log(t):-1/0,e=e>0?Math.log(e):1/0,e=Math.max(e,t),this.radius.bounds[0][0]=t,this.radius.bounds[1][0]=e},l.getDistanceLimits=function(t){var e=this.radius.bounds;return t?(t[0]=Math.exp(e[0][0]),t[1]=Math.exp(e[1][0]),t):[Math.exp(e[0][0]),Math.exp(e[1][0])]},l.toJSON=function(){return this.recalcMatrix(this.lastT()),{center:this.computedCenter.slice(),rotation:this.computedRotation.slice(),distance:Math.log(this.computedRadius[0]),zoomMin:this.radius.bounds[0][0],zoomMax:this.radius.bounds[1][0]}},l.fromJSON=function(t){var e=this.lastT(),n=t.center;n&&this.center.set(e,n[0],n[1],n[2]);var i=t.rotation;i&&this.rotation.set(e,i[0],i[1],i[2],i[3]);var r=t.distance;r&&r>0&&this.radius.set(e,Math.log(r)),this.setDistanceLimits(t.zoomMin,t.zoomMax)}},885:t=>{t.exports=function(t,e){e||(e=[0,""]),t=String(t);var n=parseFloat(t,10);return e[0]=n,e[1]=t.match(/[\d.\-\+]*\s*(.*)/)[1]||"",e}},210:(t,e,n)=>{t.exports=n(600)},698:(t,e,n)=>{t.exports=n.g.performance&&n.g.performance.now?function(){return performance.now()}:Date.now||function(){return+new Date}},810:(t,e,n)=>{"use strict";var i=n(885);t.exports=a;var r=s("in",document.body);function o(t,e){var n=i(getComputedStyle(t).getPropertyValue(e));return n[0]*a(n[1],t)}function s(t,e){var n=document.createElement("div");n.style.height="128"+t,e.appendChild(n);var i=o(n,"height")/128;return e.removeChild(n),i}function a(t,e){if(!t)return null;switch(e=e||document.body,t=(t+""||"px").trim().toLowerCase(),e!==window&&e!==document||(e=document.body),t){case"%":return e.clientHeight/100;case"ch":case"ex":return s(t,e);case"em":return o(e,"font-size");case"rem":return o(document.body,"font-size");case"vw":return window.innerWidth/100;case"vh":return window.innerHeight/100;case"vmin":return Math.min(window.innerWidth,window.innerHeight)/100;case"vmax":return Math.max(window.innerWidth,window.innerHeight)/100;case"in":return r;case"cm":return r/2.54;case"mm":return r/25.4;case"pt":return r/72;case"pc":return r/6;case"px":return 1}var n=i(t);if(!isNaN(n[0])&&n[1]){var h=a(n[1],e);return"number"==typeof h?n[0]*h:null}return null}},786:(t,e,n)=>{"use strict";t.exports=function(t){var e=(t=t||{}).center||[0,0,0],n=t.up||[0,1,0],i=t.right||u(n),r=t.radius||1,o=t.theta||0,f=t.phi||0;if(e=[].slice.call(e,0,3),n=[].slice.call(n,0,3),a(n,n),i=[].slice.call(i,0,3),a(i,i),"eye"in t){var d=t.eye,v=[d[0]-e[0],d[1]-e[1],d[2]-e[2]];s(i,v,n),c(i[0],i[1],i[2])<1e-6?i=u(n):a(i,i),r=c(v[0],v[1],v[2]);var m=h(n,v)/r,p=h(i,v)/r;f=Math.acos(m),o=Math.acos(p)}return r=Math.log(r),new l(t.zoomMin,t.zoomMax,e,n,i,r,o,f)};var i=n(173),r=n(481),o=n(397),s=n(858),a=n(91),h=n(368);function c(t,e,n){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2)+Math.pow(n,2))}function f(t){return Math.min(1,Math.max(-1,t))}function u(t){var e=Math.abs(t[0]),n=Math.abs(t[1]),i=Math.abs(t[2]),r=[0,0,0];e>Math.max(n,i)?r[2]=1:n>Math.max(e,i)?r[0]=1:r[1]=1;for(var o=0,s=0,h=0;h<3;++h)o+=t[h]*t[h],s+=r[h]*t[h];for(h=0;h<3;++h)r[h]-=s/o*t[h];return a(r,r),r}function l(t,e,n,r,o,s,a,h){this.center=i(n),this.up=i(r),this.right=i(o),this.radius=i([s]),this.angle=i([a,h]),this.angle.bounds=[[-1/0,-Math.PI/2],[1/0,Math.PI/2]],this.setDistanceLimits(t,e),this.computedCenter=this.center.curve(0),this.computedUp=this.up.curve(0),this.computedRight=this.right.curve(0),this.computedRadius=this.radius.curve(0),this.computedAngle=this.angle.curve(0),this.computedToward=[0,0,0],this.computedEye=[0,0,0],this.computedMatrix=new Array(16);for(var c=0;c<16;++c)this.computedMatrix[c]=.5;this.recalcMatrix(0)}var d=l.prototype;d.setDistanceLimits=function(t,e){t=t>0?Math.log(t):-1/0,e=e>0?Math.log(e):1/0,e=Math.max(e,t),this.radius.bounds[0][0]=t,this.radius.bounds[1][0]=e},d.getDistanceLimits=function(t){var e=this.radius.bounds[0];return t?(t[0]=Math.exp(e[0][0]),t[1]=Math.exp(e[1][0]),t):[Math.exp(e[0][0]),Math.exp(e[1][0])]},d.recalcMatrix=function(t){this.center.curve(t),this.up.curve(t),this.right.curve(t),this.radius.curve(t),this.angle.curve(t);for(var e=this.computedUp,n=this.computedRight,i=0,r=0,o=0;o<3;++o)r+=e[o]*n[o],i+=e[o]*e[o];var h=Math.sqrt(i),f=0;for(o=0;o<3;++o)n[o]-=e[o]*r/i,f+=n[o]*n[o],e[o]/=h;var u=Math.sqrt(f);for(o=0;o<3;++o)n[o]/=u;var l=this.computedToward;s(l,e,n),a(l,l);var d=Math.exp(this.computedRadius[0]),v=this.computedAngle[0],m=this.computedAngle[1],p=Math.cos(v),g=Math.sin(v),x=Math.cos(m),M=Math.sin(m),y=this.computedCenter,_=p*x,w=g*x,b=M,E=-p*M,A=-g*M,T=x,R=this.computedEye,L=this.computedMatrix;for(o=0;o<3;++o){var D=_*n[o]+w*l[o]+b*e[o];L[4*o+1]=E*n[o]+A*l[o]+T*e[o],L[4*o+2]=D,L[4*o+3]=0}var C=L[1],P=L[5],F=L[9],B=L[2],U=L[6],Y=L[10],z=P*Y-F*U,N=F*B-C*Y,S=C*U-P*B,I=c(z,N,S);for(z/=I,N/=I,S/=I,L[0]=z,L[4]=N,L[8]=S,o=0;o<3;++o)R[o]=y[o]+L[2+4*o]*d;for(o=0;o<3;++o){f=0;for(var O=0;O<3;++O)f+=L[o+4*O]*R[O];L[12+o]=-f}L[15]=1},d.getMatrix=function(t,e){this.recalcMatrix(t);var n=this.computedMatrix;if(e){for(var i=0;i<16;++i)e[i]=n[i];return e}return n};var v=[0,0,0];d.rotate=function(t,e,n,i){if(this.angle.move(t,e,n),i){this.recalcMatrix(t);var r=this.computedMatrix;v[0]=r[2],v[1]=r[6],v[2]=r[10];for(var s=this.computedUp,a=this.computedRight,h=this.computedToward,c=0;c<3;++c)r[4*c]=s[c],r[4*c+1]=a[c],r[4*c+2]=h[c];for(o(r,r,i,v),c=0;c<3;++c)s[c]=r[4*c],a[c]=r[4*c+1];this.up.set(t,s[0],s[1],s[2]),this.right.set(t,a[0],a[1],a[2])}},d.pan=function(t,e,n,i){e=e||0,n=n||0,i=i||0,this.recalcMatrix(t);var r=this.computedMatrix,o=(Math.exp(this.computedRadius[0]),r[1]),s=r[5],a=r[9],h=c(o,s,a);o/=h,s/=h,a/=h;var f=r[0],u=r[4],l=r[8],d=f*o+u*s+l*a,v=c(f-=o*d,u-=s*d,l-=a*d),m=(f/=v)*e+o*n,p=(u/=v)*e+s*n,g=(l/=v)*e+a*n;this.center.move(t,m,p,g);var x=Math.exp(this.computedRadius[0]);x=Math.max(1e-4,x+i),this.radius.set(t,Math.log(x))},d.translate=function(t,e,n,i){this.center.move(t,e||0,n||0,i||0)},d.setMatrix=function(t,e,n,i){var o=1;"number"==typeof n&&(o=0|n),(o<0||o>3)&&(o=1);var s=(o+2)%3;e||(this.recalcMatrix(t),e=this.computedMatrix);var a=e[o],h=e[o+4],u=e[o+8];if(i){var l=Math.abs(a),d=Math.abs(h),v=Math.abs(u),m=Math.max(l,d,v);l===m?(a=a<0?-1:1,h=u=0):v===m?(u=u<0?-1:1,a=h=0):(h=h<0?-1:1,a=u=0)}else{var p=c(a,h,u);a/=p,h/=p,u/=p}var g,x,M=e[s],y=e[s+4],_=e[s+8],w=M*a+y*h+_*u,b=c(M-=a*w,y-=h*w,_-=u*w),E=h*(_/=b)-u*(y/=b),A=u*(M/=b)-a*_,T=a*y-h*M,R=c(E,A,T);if(E/=R,A/=R,T/=R,this.center.jump(t,j,q,V),this.radius.idle(t),this.up.jump(t,a,h,u),this.right.jump(t,M,y,_),2===o){var L=e[1],D=e[5],C=e[9],P=L*M+D*y+C*_,F=L*E+D*A+C*T;g=z<0?-Math.PI/2:Math.PI/2,x=Math.atan2(F,P)}else{var B=e[2],U=e[6],Y=e[10],z=B*a+U*h+Y*u,N=B*M+U*y+Y*_,S=B*E+U*A+Y*T;g=Math.asin(f(z)),x=Math.atan2(S,N)}this.angle.jump(t,x,g),this.recalcMatrix(t);var I=e[2],O=e[6],X=e[10],k=this.computedMatrix;r(k,e);var W=k[15],j=k[12]/W,q=k[13]/W,V=k[14]/W,Z=Math.exp(this.computedRadius[0]);this.center.jump(t,j-I*Z,q-O*Z,V-X*Z)},d.lastT=function(){return Math.max(this.center.lastT(),this.up.lastT(),this.right.lastT(),this.radius.lastT(),this.angle.lastT())},d.idle=function(t){this.center.idle(t),this.up.idle(t),this.right.idle(t),this.radius.idle(t),this.angle.idle(t)},d.flush=function(t){this.center.flush(t),this.up.flush(t),this.right.flush(t),this.radius.flush(t),this.angle.flush(t)},d.setDistance=function(t,e){e>0&&this.radius.set(t,Math.log(e))},d.lookAt=function(t,e,n,i){this.recalcMatrix(t),e=e||this.computedEye,n=n||this.computedCenter;var r=(i=i||this.computedUp)[0],o=i[1],s=i[2],a=c(r,o,s);if(!(a<1e-6)){r/=a,o/=a,s/=a;var h=e[0]-n[0],u=e[1]-n[1],l=e[2]-n[2],d=c(h,u,l);if(!(d<1e-6)){h/=d,u/=d,l/=d;var v=this.computedRight,m=v[0],p=v[1],g=v[2],x=r*m+o*p+s*g,M=c(m-=x*r,p-=x*o,g-=x*s);if(!(M<.01&&(M=c(m=o*l-s*u,p=s*h-r*l,g=r*u-o*h))<1e-6)){m/=M,p/=M,g/=M,this.up.set(t,r,o,s),this.right.set(t,m,p,g),this.center.set(t,n[0],n[1],n[2]),this.radius.set(t,Math.log(d));var y=o*g-s*p,_=s*m-r*g,w=r*p-o*m,b=c(y,_,w),E=r*h+o*u+s*l,A=m*h+p*u+g*l,T=(y/=b)*h+(_/=b)*u+(w/=b)*l,R=Math.asin(f(E)),L=Math.atan2(T,A),D=this.angle._state,C=D[D.length-1],P=D[D.length-2];C%=2*Math.PI;var F=Math.abs(C+2*Math.PI-L),B=Math.abs(C-L),U=Math.abs(C-2*Math.PI-L);F<B&&(C+=2*Math.PI),U<B&&(C-=2*Math.PI),this.angle.jump(this.angle.lastT(),C,P),this.angle.set(t,L,R)}}}}},63:t=>{t.exports="#version 300 es\n\n// This is a fragment shader. If you've opened this file first, please\n// open and read lambert.vert.glsl before reading on.\n// Unlike the vertex shader, the fragment shader actually does compute\n// the shading of geometry. For every pixel in your program's output\n// screen, the fragment shader is run for every bit of geometry that\n// particular pixel overlaps. By implicitly interpolating the position\n// data passed into the fragment shader by the vertex shader, the fragment shader\n// can compute what color to apply to its pixel based on things like vertex\n// position, light position, and vertex color.\nprecision highp float;\n\nuniform vec4 u_Color; // The color with which to render this instance of geometry.\n\nuniform vec4 u_SecondaryColor;\n\nuniform float u_Time;\n\nuniform mat4 u_Model; \n\nuniform vec4 u_CameraPos; \n\n// These are the interpolated values out of the rasterizer, so you can't know\n// their specific values without knowing the vertices that contributed to them\nin vec4 fs_Pos;\nin vec4 fs_Nor;\nin vec4 fs_LightVec;\nin vec4 fs_Col;\nin float fs_isEye;\nin float fs_isMouth;\n\n\n\nout vec4 out_Col; // This is the final output color that you will see on your\n                  // screen for the pixel that is currently being processed.\n\n\nvec2 random2(vec2 p) {\n    return fract(sin(\n                     vec2(dot(p, vec2(127.1, 311.7)),\n                          dot(p, vec2(269.5, 183.3)))\n                     )* 43758.5453);\n}\n\n\nvec3 random3(vec3 p) {\n    return fract(sin(vec3(dot(p, vec3(127.1, 311.7, 1)),\n                                    dot(p, vec3(269.5, 183.3, 1)),\n                                    dot(p, vec3(420.6, 631.2, 1)))\n                                    ) * 43758.5453);\n}\n\n\nfloat hash(float p) { p = fract(p * 0.011); p *= p + 7.5; p *= p + p; return fract(p); }\n\nfloat noise3D(vec3 x) {\n    const vec3 step = vec3(110, 241, 171);\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n    float n = dot(i, step);\n    vec3 u = f * f * (3.0 - 2.0 * f);\n    return mix(mix(mix( hash(n + dot(step, vec3(0, 0, 0))), hash(n + dot(step, vec3(1, 0, 0))), u.x),\n                   mix( hash(n + dot(step, vec3(0, 1, 0))), hash(n + dot(step, vec3(1, 1, 0))), u.x), u.y),\n               mix(mix( hash(n + dot(step, vec3(0, 0, 1))), hash(n + dot(step, vec3(1, 0, 1))), u.x),\n                   mix( hash(n + dot(step, vec3(0, 1, 1))), hash(n + dot(step, vec3(1, 1, 1))), u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 x) {\n    x *= 10.f;\n\tfloat v = 0.0;\n\tfloat a = 0.3;\n\tvec3 shift = vec3(100);\n\tfor (int i = 0; i < 10; ++i) {\n\t\tv += a * noise3D(x);\n\t\tx = x * 2.0 + shift;\n\t\ta *= 0.3;\n\t}\n\treturn v;\n}\n\n\nfloat noise2D(vec2 p) {\n    vec2 noise = sin(vec2(p.x * 127.1f, p.y * 269.5f));\n    noise = noise * 43758.5453f;\n    noise = fract(noise);\n    return length(noise);\n}\n\n\nfloat interpNoise2D(float x, float y) {\n    int intX = int(floor(x));\n    float fractX = fract(x);\n    int intY = int(floor(y));\n    float fractY = fract(y);\n\n    float v1 = noise2D(vec2(intX, intY));\n    float v2 = noise2D(vec2(intX + 1, intY));\n    float v3 = noise2D(vec2(intX, intY + 1));\n    float v4 = noise2D(vec2(intX + 1, intY + 1));\n\n    float i1 = mix(v1, v2, fractX);\n    float i2 = mix(v3, v4, fractX);\n    return mix(i1, i2, fractY);\n}\n\nfloat interpNoise3D(float x,float y, float z) {\n\n    int intX = int(floor(x));\n    float fractX = fract(x);\n    int intY = int(floor(y));\n    float fractY = fract(y);\n    int intZ = int(floor(z));\n    float fractZ = fract(z);\n\n    float v1 = noise3D(vec3(intX, intY, intZ));\n    float v2 = noise3D(vec3(intX + 1, intY, intZ));\n    float v3 = noise3D(vec3(intX, intY + 1, intZ));\n    float v4 = noise3D(vec3(intX + 1, intY + 1, intZ));\n\n    float v5 = noise3D(vec3(intX, intY, intZ + 1));\n    float v6 = noise3D(vec3(intX + 1, intY, intZ + 1));\n    float v7 = noise3D(vec3(intX, intY + 1, intZ + 1));\n    float v8 = noise3D(vec3(intX + 1, intY + 1, intZ + 1));\n\n    float i1 = mix(v1, v2, fractX);\n    float i2 = mix(v3, v4, fractX);\n    float i3 = mix(v5, v6, fractX);\n    float i4 = mix(v7, v8, fractX);\n\n    float zi1 = mix(i1, i3, fractZ);\n    float zi2 = mix(i2, i4, fractZ);\n\n    return mix(zi1, zi2, fractY);\n}\n\n\nfloat WorleyNoise(vec3 uv, float t) {\n    uv = 0.01f *u_Time + 2.f * uv + t * fbm(0.01f * uv) * 0.01 * (sin(1000.f * t) + cos(5000.f * 2.f * t + 0.5)); // Now the space is 10x10 instead of 1x1. Change this to any number you want.\n    vec3 uvInt = floor(uv);\n    vec3 uvFract = fract(uv);\n    float minDist1 = 1.0f; // Minimum distance initialized to max.\n    float minDist2 = 1.0f; \n    for(int y = -1; y <= 1; ++y) {\n        for(int x = -1; x <= 1; ++x) {\n            for(int z = -1; z <= 1; ++z) {\n                vec3 neighbor = vec3(float(x), float(y), float(z)); // Direction in which neighbor cell lies\n                vec3 point = random3(uvInt + neighbor); // Get the Voronoi centerpoint for the neighboring cell\n                vec3 diff = neighbor + point - uvFract; // Distance between fragment coord and neighbor’s Voronoi point\n                float dist = length(diff);\n                if(dist < minDist2) {\n                    if(dist < minDist1) {\n                        minDist1 = dist;\n                    } else {\n                        minDist2 = dist; \n                    }\n                }\n            }      \n        }\n    }\n\n    minDist1 += (smoothstep(0.f, 1.f, minDist1 - minDist2));\n\n    return minDist1; \n}\n\nvec3 coordsOnSphere() {\n    vec4 worldOrigin = u_Model * vec4(0., 0., 0., 1.);\n    float sphereRad = 3.0f;\n    vec4 distFromOrigin = fs_Pos - worldOrigin;\n    return vec3(sphereRad * normalize(distFromOrigin));\n}\n\n\n\nvec4 getVertexWiggleOscilation(vec4 positionOnModel, float time) {\n    return 100.f * (positionOnModel * 0.07 * length(positionOnModel.xyz * 0.2 * time)) + 0.5f;\n}\n\nvec4 worldOrigin() {\n    return u_Model * vec4(0., 0., 0., 1.);\n}\n\n\nvoid main()\n{\n    // Material base color (before shading)\n    vec4 diffuseColor = fs_Col;\n\n    //Time scalar (matches the growth scalar)\n    float t = ((sin((1.6f * u_Time - 1.f * 3.14f/5.f) * 0.03) + 1.0f)/2.0f);\n\n    vec4 pos = fs_Pos;  \n    //First pass big waves\n    vec4 highlightColor = 0.3f * vec4(fs_Col.x + 0.1f, fs_Col.y + 0.5f, fs_Col.z + 0.1f, 1.f);\n    \n    // Glow more when object contracts\n    highlightColor *= 0.5f * length(getVertexWiggleOscilation(pos, t));\n    float multiplier = 1.f - 0.6f * pow(length(fs_Pos - worldOrigin() - vec4(0.f, -0.1f, 0.f, 0.f)), 2.5f);\n    highlightColor += multiplier * highlightColor;\n    \n    //Additional flicker effect\n    highlightColor.xyz += 0.1 * vec3(fbm(vec3(0.6 * t))); \n    diffuseColor.xyz += highlightColor.xyz;\n        \n\n    // Calculate the diffuse term for Lambert shading\n    float diffuseTerm = dot(normalize(fs_Nor), normalize(fs_LightVec));\n    // Avoid negative lighting values\n    diffuseTerm = clamp(diffuseTerm, 0.f, 1.f);\n\n    float ambientTerm = 0.3f;\n\n    float lightIntensity = diffuseTerm + ambientTerm;   //Add a small float value to the color multiplier\n                                                            //to simulate ambient lighting. This ensures that faces that are not\n                                                            //lit by our point light are not completely black.\n\n        \n   \n\n    // Compute final shaded color    \n    out_Col = vec4(diffuseColor.rgb * lightIntensity, diffuseColor.a);\n\n    if(fs_isEye > 0.5f) {\n        out_Col = vec4(1.f);\n        float leftPupil = pow(18.f * (fs_Pos.x + 0.25f), 2.f) + pow(16.f * (fs_Pos.y + 0.1f), 2.f) + pow(5.f * (fs_Pos.z - 1.1f), 2.f);\n        float rightPupil = pow(18.f * (fs_Pos.x - 0.34f), 2.f) + pow(16.f * (fs_Pos.y + 0.07f), 2.f) + pow(5.f * (fs_Pos.z - 1.1f), 2.f);\n        if(leftPupil < 1.f || rightPupil < 1.f) {\n        out_Col = vec4(0.2, 0.2, 0.2, 1.f);\n        }  \n    } else if(fs_isMouth > 0.5f) {\n             out_Col = vec4(0.2, 0.2, 0.2, 1.f);\n        }\n\n}\n"},816:t=>{t.exports="#version 300 es\n\n//This is a vertex shader. While it is called a \"shader\" due to outdated conventions, this file\n//is used to apply matrix transformations to the arrays of vertex data passed to it.\n//Since this code is run on your GPU, each vertex is transformed simultaneously.\n//If it were run on your CPU, each vertex would have to be processed in a FOR loop, one at a time.\n//This simultaneous transformation allows your program to run much faster, especially when rendering\n//geometry with millions of vertices.\n\nuniform mat4 u_Model;       // The matrix that defines the transformation of the\n                            // object we're rendering. In this assignment,\n                            // this will be the result of traversing your scene graph.\n\nuniform mat4 u_ModelInvTr;  // The inverse transpose of the model matrix.\n                            // This allows us to transform the object's normals properly\n                            // if the object has been non-uniformly scaled.\n\nuniform mat4 u_ViewProj;    // The matrix that defines the camera's transformation.\n                            // We've written a static matrix for you to use for HW2,\n                            // but in HW3 you'll have to generate one yourself\n\nuniform float u_Time;\n\nuniform vec4 u_CameraPos;\n\nin vec4 vs_Pos;             // The array of vertex positions passed to the shader\n\nin vec4 vs_Nor;             // The array of vertex normals passed to the shader\n\nin vec4 vs_Col;             // The array of vertex colors passed to the shader.\n\nout vec4 fs_Nor;            // The array of normals that has been transformed by u_ModelInvTr. This is implicitly passed to the fragment shader.\nout vec4 fs_LightVec;       // The direction in which our virtual light lies, relative to each vertex. This is implicitly passed to the fragment shader.\nout vec4 fs_Col;            // The color of each vertex. This is implicitly passed to the fragment shader.\nout vec4 fs_Pos; \n\nout float fs_isEye;\nout float fs_isMouth;\n\n\nconst vec4 lightPos = vec4(0, 0, 0, 1); //The position of our virtual light, which is used to compute the shading of\n                                        //the geometry in the fragment shader.\n\nvec4 getTargetGrowLocation(vec4 positionOnModel) {\n    vec4 worldOrigin = u_Model * vec4(0., 0., 0., 1.);\n    float sphereRad = 1.0f;\n    vec4 distFromOrigin = positionOnModel - worldOrigin;\n    return vec4(sphereRad * normalize(distFromOrigin));\n}\n\nvec3 random3(vec3 p) {\n    return fract(sin(vec3(dot(p, vec3(127.1, 311.7, 1)),\n                                    dot(p, vec3(269.5, 183.3, 1)),\n                                    dot(p, vec3(420.6, 631.2, 1)))\n                                    ) * 43758.5453);\n}\n\n// Precision-adjusted variations of https://www.shadertoy.com/view/4djSRW\nfloat hash(float p) { p = fract(p * 0.011); p *= p + 7.5; p *= p + p; return fract(p); }\n\nfloat noise3D(vec3 x) {\n    const vec3 step = vec3(110, 241, 171);\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n    float n = dot(i, step);\n    vec3 u = f * f * (3.0 - 2.0 * f);\n    return mix(mix(mix( hash(n + dot(step, vec3(0, 0, 0))), hash(n + dot(step, vec3(1, 0, 0))), u.x),\n                   mix( hash(n + dot(step, vec3(0, 1, 0))), hash(n + dot(step, vec3(1, 1, 0))), u.x), u.y),\n               mix(mix( hash(n + dot(step, vec3(0, 0, 1))), hash(n + dot(step, vec3(1, 0, 1))), u.x),\n                   mix( hash(n + dot(step, vec3(0, 1, 1))), hash(n + dot(step, vec3(1, 1, 1))), u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 x) {\n    x *= 5.f;\n\tfloat v = 0.0;\n\tfloat a = 0.3;\n\tvec3 shift = vec3(100);\n\tfor (int i = 0; i < 10; ++i) {\n\t\tv += a * noise3D(x);\n\t\tx = x * 2.0 + shift;\n\t\ta *= 0.3;\n\t}\n\treturn v;\n}\n\n\nfloat interpNoise3D(float x,float y, float z) {\n\n    int intX = int(floor(x));\n    float fractX = fract(x);\n    int intY = int(floor(y));\n    float fractY = fract(y);\n    int intZ = int(floor(z));\n    float fractZ = fract(z);\n\n    float v1 = noise3D(vec3(intX, intY, intZ));\n    float v2 = noise3D(vec3(intX + 1, intY, intZ));\n    float v3 = noise3D(vec3(intX, intY + 1, intZ));\n    float v4 = noise3D(vec3(intX + 1, intY + 1, intZ));\n\n    float v5 = noise3D(vec3(intX, intY, intZ + 1));\n    float v6 = noise3D(vec3(intX + 1, intY, intZ + 1));\n    float v7 = noise3D(vec3(intX, intY + 1, intZ + 1));\n    float v8 = noise3D(vec3(intX + 1, intY + 1, intZ + 1));\n\n    float i1 = mix(v1, v2, fractX);\n    float i2 = mix(v3, v4, fractX);\n    float i3 = mix(v5, v6, fractX);\n    float i4 = mix(v7, v8, fractX);\n\n    float zi1 = mix(i1, i3, fractZ);\n    float zi2 = mix(i2, i4, fractZ);\n\n    return mix(zi1, zi2, fractY);\n}\n\nfloat WorleyNoise(vec3 uv, float t) {\n    uv = 0.02f * u_Time + 2.f * uv; // Now the space is 10x10 instead of 1x1. Change this to any number you want.\n    vec3 uvInt = floor(uv);\n    vec3 uvFract = fract(uv);\n    float minDist1 = 1.0f; // Minimum distance initialized to max.\n    float minDist2 = 1.0f; \n    for(int y = -1; y <= 1; ++y) {\n        for(int x = -1; x <= 1; ++x) {\n            for(int z = -1; z <= 1; ++z) {\n                vec3 neighbor = vec3(float(x), float(y), float(z)); // Direction in which neighbor cell lies\n                vec3 point = random3(uvInt + neighbor); // Get the Voronoi centerpoint for the neighboring cell\n                vec3 diff = neighbor + point - uvFract; // Distance between fragment coord and neighbor’s Voronoi point\n                float dist = length(diff);\n                if(dist < minDist2) {\n                    if(dist < minDist1) {\n                        minDist1 = dist;\n                    } else {\n                        minDist2 = dist; \n                    }\n                }\n            }      \n        }\n    }\n\n    minDist1 += (smoothstep(0.f, 1.f, minDist1 - minDist2));\n\n    return minDist1; \n}\n\nfloat gentleWorley(vec3 uv, float t, float numCells) {\n    uv = 0.02f * t + numCells * uv; // Now the space is 10x10 instead of 1x1. Change this to any number you want.\n    vec3 uvInt = floor(uv);\n    vec3 uvFract = fract(uv);\n    float minDist1 = 1.0f; // Minimum distance initialized to max.\n    for(int y = -1; y <= 1; ++y) {\n        for(int x = -1; x <= 1; ++x) {\n            for(int z = -1; z <= 1; ++z) {\n                vec3 neighbor = vec3(float(x), float(y), float(z)); // Direction in which neighbor cell lies\n                vec3 point = random3(uvInt + neighbor); // Get the Voronoi centerpoint for the neighboring cell\n                vec3 diff = neighbor + point - uvFract; // Distance between fragment coord and neighbor’s Voronoi point\n                float dist = length(diff);\n                if(dist < minDist1) {\n                        minDist1 = dist;\n                }\n            }      \n        }\n    }\n\n    return minDist1; \n}\n\n\nvec4 getVertexWiggleOscilation(vec4 positionOnModel, float time) {\n    return 3.f * sin(positionOnModel * 0.07 * length(random3(positionOnModel.xyz * 0.2) * time));\n}\n\nvec4 flameYOffset(vec4 modelOffset){\n    //modelOffset.xyz += 0.02 * fbm(modelOffset.xyz);\n    //Time cycle for growing object\n    float flameT = u_Time * 0.05;\n\n    float vertOffset = 0.6 *  gentleWorley(modelOffset.xyz, flameT, 2.f);\n    modelOffset.y =  modelOffset.y - 3.0f * vertOffset;\n\n    modelOffset.y += 1.f; \n    \n    return modelOffset;\n   \n}\n\nvec4 displaceFlame(vec4 modelposition) {\n        vec4 rightArm = vec4(-0.57f, -0.59f, 0.57f, 1.f);\n        vec4 leftArm = vec4(0.57f, -0.59f, 0.57f, 1.f);\n        \n        vec4 worldOrigin = u_Model * vec4(0., 0., 0., 1.);\n\n        float len1 = length(vs_Pos - rightArm); \n        float len2 = length(vs_Pos - leftArm); \n\n        float angleFromXZ = dot(vs_Pos - vec4(0.f, 0.f, 0.f, 0.f), vec4(0.f, 1.f, 0.f, 0.f));\n        if (angleFromXZ > 0.f) {\n            vec4 flameYOffset = flameYOffset(modelposition);\n            modelposition = mix(modelposition, flameYOffset, angleFromXZ);\n        }\n        \n        modelposition.xz += 0.2 *  gentleWorley(modelposition.xyz +  fbm(modelposition.xyz), -0.3 * u_Time, 2.f);\n        modelposition.xz += 0.3f * modelposition.y * fbm(modelposition.xyz - 0.01 * u_Time);\n        \n        float armWdth = 0.2f;\n        if(len1 < armWdth) {\n            len1 = smoothstep(0.f, 1.f, len1);\n            rightArm = modelposition + (armWdth - len1) * 2.f * (rightArm - worldOrigin);\n            modelposition = mix(rightArm, modelposition, len1);\n        } else if(len2 < armWdth) {\n            len2 = smoothstep(0.f, 1.f, len2);\n            leftArm = modelposition + (armWdth - len2) * 2.f * (leftArm - worldOrigin);\n            modelposition = mix(leftArm, modelposition, len2);\n        } else {\n            modelposition.x += (0.07f * sin(8.f * (-0.008f * u_Time + modelposition.y)));\n        }\n\n    return modelposition;\n}\n\n\n\nvoid main()\n{\n    fs_Col = vs_Col;                         // Pass the vertex colors to the fragment shader for interpolation\n\n    mat3 invTranspose = mat3(u_ModelInvTr);\n    fs_Nor = vec4(invTranspose * vec3(vs_Nor), 0);          // Pass the vertex normals to the fragment shader for interpolation.\n                                                            // Transform the geometry's normals by the inverse transpose of the\n                                                            // model matrix. This is necessary to ensure the normals remain\n                                                            // perpendicular to the surface after the surface is transformed by\n                                                            // the model matrix.\n\n    \n    vec4 modelposition = u_Model * vs_Pos;   // Temporarily store the transformed vertex positions for use below\n    \n    fs_isEye = 0.f;\n    fs_isMouth = 0.f; \n  \n    \n    if(vs_Col != vec4(1.0)) {\n        modelposition = displaceFlame(modelposition);\n    }\n    float leftEye = pow(8.1f * modelposition.x + 2.f, 2.f) + pow(8.1f * (modelposition.y + 0.1f), 2.f) + pow(3.f * (modelposition.z - 1.1f), 2.f);\n    float rightEye = pow(8.1f * modelposition.x - 2.8f, 2.f) + pow(8.1f * (modelposition.y + 0.07f), 2.f) + pow(3.0f * (modelposition.z - 1.1f), 2.f);\n    float mouth = pow(3.f * (modelposition.x - 0.1f), 2.f) + pow(16.f * (modelposition.y + 0.35f), 2.f) + pow(modelposition.z - 1.2, 2.f);\n    if(leftEye < 1.f || rightEye < 1.f) {\n        modelposition += vec4(0.f, 0.f, 0.02f, 0.f);\n        fs_isEye = 1.f;\n    } else if(mouth < 1.f) {\n            float distanceFromNeutral = modelposition.y - 3.f;\n            if(distanceFromNeutral < 0.f) {\n                distanceFromNeutral = 0.1 * distanceFromNeutral * distanceFromNeutral;\n            }\n            //modelposition -= vec4(0.f, -0.05f * distanceFromNeutral, 0.05f, 0.f);\n            //fs_isMouth = 1.f;\n         \n    }\n    \n\n\n    fs_LightVec =  u_CameraPos - modelposition;  // Compute the direction in which the light source lies\n\n    gl_Position = u_ViewProj * modelposition;// gl_Position is a built-in variable of OpenGL which is\n                                             // used to render the final positions of the geometry's vertices\n\n    fs_Pos = modelposition;\n}\n"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var o=e[i]={exports:{}};return t[i](o,o.exports,n),o.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{"use strict";var t,e,i=1e-6,r="undefined"!=typeof Float32Array?Float32Array:Array;function o(){var t=new r(3);return r!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function s(t,e,n){var i=new r(3);return i[0]=t,i[1]=e,i[2]=n,i}function a(t,e,n){return t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t}function h(t,e,n,i){var o=new r(4);return o[0]=t,o[1]=e,o[2]=n,o[3]=i,o}function c(t,e,n){return t[0]=e[0]+n[0],t[1]=e[1]+n[1],t[2]=e[2]+n[2],t[3]=e[3]+n[3],t}function f(t,e,n,i){return t[0]=e[0]+n[0]*i,t[1]=e[1]+n[1]*i,t[2]=e[2]+n[2]*i,t[3]=e[3]+n[3]*i,t}function u(t,e){var n=e[0],i=e[1],r=e[2],o=e[3],s=n*n+i*i+r*r+o*o;return s>0&&(s=1/Math.sqrt(s)),t[0]=n*s,t[1]=i*s,t[2]=r*s,t[3]=o*s,t}function l(e){(t=e).cullFace(t.BACK),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA)}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)}),o(),e=new r(4),r!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0);const d=class{constructor(){this.count=0,this.idxBound=!1,this.posBound=!1,this.norBound=!1,this.colBound=!1}destory(){t.deleteBuffer(this.bufIdx),t.deleteBuffer(this.bufPos),t.deleteBuffer(this.bufNor),t.deleteBuffer(this.bufCol)}generateIdx(){this.idxBound=!0,this.bufIdx=t.createBuffer()}generatePos(){this.posBound=!0,this.bufPos=t.createBuffer()}generateNor(){this.norBound=!0,this.bufNor=t.createBuffer()}generateCol(){this.colBound=!0,this.bufCol=t.createBuffer()}bindIdx(){return this.idxBound&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.bufIdx),this.idxBound}bindPos(){return this.posBound&&t.bindBuffer(t.ARRAY_BUFFER,this.bufPos),this.posBound}bindNor(){return this.norBound&&t.bindBuffer(t.ARRAY_BUFFER,this.bufNor),this.norBound}bindCol(){return this.colBound&&t.bindBuffer(t.ARRAY_BUFFER,this.bufCol),this.colBound}elemCount(){return this.count}drawMode(){return t.TRIANGLES}},v=class extends d{constructor(t,e,n,i){super(),this.radius=e,this.subdivisions=n,this.center=h(t[0],t[1],t[2],1),this.color=i}create(){const e=.5257311121191336,n=.8506508083520399;let i=20*Math.pow(4,this.subdivisions),r=10*Math.pow(4,this.subdivisions)+2;const o=new ArrayBuffer(3*i*Uint32Array.BYTES_PER_ELEMENT+4*r*Float32Array.BYTES_PER_ELEMENT+4*r*Float32Array.BYTES_PER_ELEMENT+4*r*Float32Array.BYTES_PER_ELEMENT),s=new ArrayBuffer(4*i*Uint32Array.BYTES_PER_ELEMENT),a=[o,s];let l=0;const d=3*i*Uint32Array.BYTES_PER_ELEMENT,v=d,m=d+4*r*Float32Array.BYTES_PER_ELEMENT,p=d+8*r*Float32Array.BYTES_PER_ELEMENT;let g=new Array(20),x=new Array;for(let y=0;y<20;++y)g[y]=new Uint32Array(a[l],0+3*y*Uint32Array.BYTES_PER_ELEMENT,3);let M=new Array(12);for(let _=0;_<12;++_)M[_]=new Float32Array(o,d+4*_*Float32Array.BYTES_PER_ELEMENT,4);M[0].set([-e,0,n,0]),M[1].set([e,0,n,0]),M[2].set([-e,0,-n,0]),M[3].set([e,0,-n,0]),M[4].set([0,n,e,0]),M[5].set([0,n,-e,0]),M[6].set([0,-n,e,0]),M[7].set([0,-n,-e,0]),M[8].set([n,e,0,0]),M[9].set([-n,e,0,0]),M[10].set([n,-e,0,0]),M[11].set([-n,-e,0,0]),g[0].set([0,4,1]),g[1].set([0,9,4]),g[2].set([9,5,4]),g[3].set([4,5,8]),g[4].set([4,8,1]),g[5].set([8,10,1]),g[6].set([8,3,10]),g[7].set([5,3,8]),g[8].set([5,2,3]),g[9].set([2,7,3]),g[10].set([7,10,3]),g[11].set([7,6,10]),g[12].set([7,11,6]),g[13].set([11,0,6]),g[14].set([0,1,6]),g[15].set([6,1,10]),g[16].set([9,0,11]),g[17].set([9,11,2]),g[18].set([9,2,5]),g[19].set([7,2,11]);for(let w=0;w<this.subdivisions;++w){l=1-l,x.length=4*g.length;let b=0,E=new Map;function A(t,e){let n=[t,e].sort().join("_");if(!E.has(n)){let i=new Float32Array(o,d+4*M.length*Float32Array.BYTES_PER_ELEMENT,4);c(i,M[t],M[e]),u(i,i),E.set(n,M.length),M.push(i)}return E.get(n)}for(let R=0;R<g.length;++R){let L=g[R][0],D=g[R][1],C=g[R][2],P=A(L,D),F=A(D,C),B=A(C,L),U=x[b]=new Uint32Array(a[l],0+3*b++*Uint32Array.BYTES_PER_ELEMENT,3),Y=x[b]=new Uint32Array(a[l],0+3*b++*Uint32Array.BYTES_PER_ELEMENT,3),z=x[b]=new Uint32Array(a[l],0+3*b++*Uint32Array.BYTES_PER_ELEMENT,3),N=x[b]=new Uint32Array(a[l],0+3*b++*Uint32Array.BYTES_PER_ELEMENT,3);x.length,U.set([L,P,B]),Y.set([P,F,B]),z.set([P,D,F]),N.set([B,F,C])}let T=g;g=x,x=T}if(1===l){let S=new Uint32Array(o,0,3*g.length),I=new Uint32Array(s,0,3*g.length);S.set(I)}for(let O=0;O<M.length;++O)f(new Float32Array(o,m+4*O*Float32Array.BYTES_PER_ELEMENT,4),this.center,M[O],this.radius);for(let X=0;X<M.length;++X)c(new Float32Array(o,p+4*X*Float32Array.BYTES_PER_ELEMENT,4),this.color,h(0,0,0,0));this.buffer=o,this.indices=new Uint32Array(this.buffer,0,3*g.length),this.normals=new Float32Array(this.buffer,v,4*M.length),this.positions=new Float32Array(this.buffer,m,4*M.length),this.colors=new Float32Array(this.buffer,p,4*M.length),this.generateIdx(),this.generatePos(),this.generateNor(),this.generateCol(),this.count=this.indices.length,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.bufIdx),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufNor),t.bufferData(t.ARRAY_BUFFER,this.normals,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufPos),t.bufferData(t.ARRAY_BUFFER,this.positions,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufCol),t.bufferData(t.ARRAY_BUFFER,this.colors,t.STATIC_DRAW),console.log(`Created icosphere with ${M.length} vertices`)}},m=class extends d{constructor(t){super(),this.center=h(t[0],t[1],t[2],1)}create(){this.indices=new Uint32Array([0,1,2,0,2,3]),this.normals=new Float32Array([0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0]),this.positions=new Float32Array([-1,-1,0,1,1,-1,0,1,1,1,0,1,-1,1,0,1]),this.generateIdx(),this.generatePos(),this.generateNor(),this.count=this.indices.length,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.bufIdx),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufNor),t.bufferData(t.ARRAY_BUFFER,this.normals,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufPos),t.bufferData(t.ARRAY_BUFFER,this.positions,t.STATIC_DRAW),console.log("Created square")}},p=class extends d{constructor(t){super(),this.center=h(t[0],t[1],t[2],1)}create(){this.indices=new Uint32Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),this.normals=new Float32Array([0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,-1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0]),this.positions=new Float32Array([-1,-1,1,1,1,-1,1,1,1,1,1,1,-1,1,1,1,1,-1,1,1,1,-1,-1,1,1,1,-1,1,1,1,1,1,-1,-1,1,1,-1,-1,-1,1,-1,1,-1,1,-1,1,1,1,1,1,1,1,1,1,-1,1,-1,1,-1,1,-1,1,1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,1,1,1,-1,1,-1,1,-1,1]),this.generateIdx(),this.generatePos(),this.generateNor(),this.count=this.indices.length,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.bufIdx),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufNor),t.bufferData(t.ARRAY_BUFFER,this.normals,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.bufPos),t.bufferData(t.ARRAY_BUFFER,this.positions,t.STATIC_DRAW),console.log("Created Cube!")}};function g(){var t=new r(16);return r!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function x(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function M(t,e,n,r){var o,s,a,h,c,f,u,l,d,v,m=e[0],p=e[1],g=e[2],M=r[0],y=r[1],_=r[2],w=n[0],b=n[1],E=n[2];return Math.abs(m-w)<i&&Math.abs(p-b)<i&&Math.abs(g-E)<i?x(t):(u=m-w,l=p-b,d=g-E,o=y*(d*=v=1/Math.hypot(u,l,d))-_*(l*=v),s=_*(u*=v)-M*d,a=M*l-y*u,(v=Math.hypot(o,s,a))?(o*=v=1/v,s*=v,a*=v):(o=0,s=0,a=0),h=l*a-d*s,c=d*o-u*a,f=u*s-l*o,(v=Math.hypot(h,c,f))?(h*=v=1/v,c*=v,f*=v):(h=0,c=0,f=0),t[0]=o,t[1]=h,t[2]=u,t[3]=0,t[4]=s,t[5]=c,t[6]=l,t[7]=0,t[8]=a,t[9]=f,t[10]=d,t[11]=0,t[12]=-(o*m+s*p+a*g),t[13]=-(h*m+c*p+f*g),t[14]=-(u*m+l*p+d*g),t[15]=1,t)}const y=class{constructor(t){this.canvas=t}setClearColor(e,n,i,r){t.clearColor(e,n,i,r)}setSize(t,e){this.canvas.width=t,this.canvas.height=e}clear(){t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}render(t,e,n,i,r,o){let s=g(),a=g();x(s),function(t,e,n){var i=e[0],r=e[1],o=e[2],s=e[3],a=e[4],h=e[5],c=e[6],f=e[7],u=e[8],l=e[9],d=e[10],v=e[11],m=e[12],p=e[13],g=e[14],x=e[15],M=n[0],y=n[1],_=n[2],w=n[3];t[0]=M*i+y*a+_*u+w*m,t[1]=M*r+y*h+_*l+w*p,t[2]=M*o+y*c+_*d+w*g,t[3]=M*s+y*f+_*v+w*x,M=n[4],y=n[5],_=n[6],w=n[7],t[4]=M*i+y*a+_*u+w*m,t[5]=M*r+y*h+_*l+w*p,t[6]=M*o+y*c+_*d+w*g,t[7]=M*s+y*f+_*v+w*x,M=n[8],y=n[9],_=n[10],w=n[11],t[8]=M*i+y*a+_*u+w*m,t[9]=M*r+y*h+_*l+w*p,t[10]=M*o+y*c+_*d+w*g,t[11]=M*s+y*f+_*v+w*x,M=n[12],y=n[13],_=n[14],w=n[15],t[12]=M*i+y*a+_*u+w*m,t[13]=M*r+y*h+_*l+w*p,t[14]=M*o+y*c+_*d+w*g,t[15]=M*s+y*f+_*v+w*x}(a,t.projectionMatrix,t.viewMatrix),e.setModelMatrix(s),e.setViewProjMatrix(a),e.setGeometryColor(r),e.setSecondaryGeometryColor(o),e.setTime(i),e.setCameraPosition(t.controls.eye),e.setEyeRefUp(t.controls.eye,t.controls.center,t.controls.up);for(let t of n)e.draw(t)}};var _=n(478);const w=class{constructor(t,e){this.projectionMatrix=g(),this.viewMatrix=g(),this.fovy=45,this.aspectRatio=1,this.near=.1,this.far=1e3,this.position=o(),this.direction=o(),this.target=o(),this.up=o(),this.controls=_(document.getElementById("canvas"),{eye:t,center:e}),a(this.target,this.position,this.direction),M(this.viewMatrix,this.controls.eye,this.controls.center,this.controls.up)}setAspectRatio(t){this.aspectRatio=t}updateProjectionMatrix(){var t,e,n,i,r,o,s;t=this.projectionMatrix,e=this.fovy,n=this.aspectRatio,i=this.near,r=this.far,s=1/Math.tan(e/2),t[0]=s/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=s,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=r&&r!==1/0?(o=1/(i-r),t[10]=(r+i)*o,t[14]=2*r*i*o):(t[10]=-1,t[14]=-2*i)}update(){this.controls.tick(),a(this.target,this.position,this.direction),M(this.viewMatrix,this.controls.eye,this.controls.center,this.controls.up)}};var b=null;class E{constructor(e,n){if(this.shader=t.createShader(e),t.shaderSource(this.shader,n),t.compileShader(this.shader),!t.getShaderParameter(this.shader,t.COMPILE_STATUS))throw t.getShaderInfoLog(this.shader)}}const A=class{constructor(e){this.prog=t.createProgram();for(let n of e)t.attachShader(this.prog,n.shader);if(t.linkProgram(this.prog),!t.getProgramParameter(this.prog,t.LINK_STATUS))throw t.getProgramInfoLog(this.prog);this.unifEye=t.getUniformLocation(this.prog,"u_Eye"),this.unifRef=t.getUniformLocation(this.prog,"u_Ref"),this.unifUp=t.getUniformLocation(this.prog,"u_Up"),this.unifDimensions=t.getUniformLocation(this.prog,"u_Dimensions"),this.unifCameraPos=t.getUniformLocation(this.prog,"u_CameraPos"),this.attrPos=t.getAttribLocation(this.prog,"vs_Pos"),this.attrNor=t.getAttribLocation(this.prog,"vs_Nor"),this.attrCol=t.getAttribLocation(this.prog,"vs_Col"),this.unifModel=t.getUniformLocation(this.prog,"u_Model"),this.unifModelInvTr=t.getUniformLocation(this.prog,"u_ModelInvTr"),this.unifViewProj=t.getUniformLocation(this.prog,"u_ViewProj"),this.unifColor=t.getUniformLocation(this.prog,"u_Color"),this.unifSecondaryColor=t.getUniformLocation(this.prog,"u_SecondaryColor"),this.unifTime=t.getUniformLocation(this.prog,"u_Time")}use(){b!==this.prog&&(t.useProgram(this.prog),b=this.prog)}setEyeRefUp(e,n,i){this.use(),-1!==this.unifEye&&t.uniform3f(this.unifEye,e[0],e[1],e[2]),-1!==this.unifRef&&t.uniform3f(this.unifRef,n[0],n[1],n[2]),-1!==this.unifUp&&t.uniform3f(this.unifUp,i[0],i[1],i[2])}setDimensions(e,n){this.use(),-1!==this.unifDimensions&&t.uniform2f(this.unifDimensions,e,n)}setModelMatrix(e){if(this.use(),-1!==this.unifModel&&t.uniformMatrix4fv(this.unifModel,!1,e),-1!==this.unifModelInvTr){let U=g();!function(t,e){if(t===e){var n=e[1],i=e[2],r=e[3],o=e[6],s=e[7],a=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=n,t[6]=e[9],t[7]=e[13],t[8]=i,t[9]=o,t[11]=e[14],t[12]=r,t[13]=s,t[14]=a}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15]}(U,e),n=U,r=(i=U)[0],o=i[1],s=i[2],a=i[3],h=i[4],c=i[5],f=i[6],u=i[7],l=i[8],d=i[9],v=i[10],m=i[11],p=i[12],x=i[13],M=i[14],(B=(_=r*c-o*h)*(F=v*(y=i[15])-m*M)-(w=r*f-s*h)*(P=d*y-m*x)+(b=r*u-a*h)*(C=d*M-v*x)+(E=o*f-s*c)*(D=l*y-m*p)-(A=o*u-a*c)*(L=l*M-v*p)+(T=s*u-a*f)*(R=l*x-d*p))&&(B=1/B,n[0]=(c*F-f*P+u*C)*B,n[1]=(s*P-o*F-a*C)*B,n[2]=(x*T-M*A+y*E)*B,n[3]=(v*A-d*T-m*E)*B,n[4]=(f*D-h*F-u*L)*B,n[5]=(r*F-s*D+a*L)*B,n[6]=(M*b-p*T-y*w)*B,n[7]=(l*T-v*b+m*w)*B,n[8]=(h*P-c*D+u*R)*B,n[9]=(o*D-r*P-a*R)*B,n[10]=(p*A-x*b+y*_)*B,n[11]=(d*b-l*A-m*_)*B,n[12]=(c*L-h*C-f*R)*B,n[13]=(r*C-o*L+s*R)*B,n[14]=(x*w-p*E-M*_)*B,n[15]=(l*E-d*w+v*_)*B),t.uniformMatrix4fv(this.unifModelInvTr,!1,U)}var n,i,r,o,s,a,h,c,f,u,l,d,v,m,p,x,M,y,_,w,b,E,A,T,R,L,D,C,P,F,B}setViewProjMatrix(e){this.use(),-1!==this.unifViewProj&&t.uniformMatrix4fv(this.unifViewProj,!1,e)}setGeometryColor(e){this.use(),-1!==this.unifColor&&t.uniform4fv(this.unifColor,e)}setSecondaryGeometryColor(e){this.use(),-1!==this.unifSecondaryColor&&t.uniform4fv(this.unifSecondaryColor,e)}setTime(e){this.use(),-1!==this.unifTime&&t.uniform1f(this.unifTime,e)}setCameraPosition(e){this.use(),-1!=this.unifCameraPos&&t.uniform4fv(this.unifCameraPos,h(e[0],e[1],e[2],1))}draw(e){this.use(),-1!=this.attrPos&&e.bindPos()&&(t.enableVertexAttribArray(this.attrPos),t.vertexAttribPointer(this.attrPos,4,t.FLOAT,!1,0,0)),-1!=this.attrNor&&e.bindNor()&&(t.enableVertexAttribArray(this.attrNor),t.vertexAttribPointer(this.attrNor,4,t.FLOAT,!1,0,0)),-1!=this.attrCol&&e.bindCol()&&(t.enableVertexAttribArray(this.attrCol),t.vertexAttribPointer(this.attrCol,4,t.FLOAT,!1,0,0)),e.bindIdx(),t.drawElements(e.drawMode(),e.elemCount(),t.UNSIGNED_INT,0),-1!=this.attrPos&&t.disableVertexAttribArray(this.attrPos),-1!=this.attrNor&&t.disableVertexAttribArray(this.attrNor),-1!=this.attrCol&&t.disableVertexAttribArray(this.attrCol)}};let T,R,L,D,C=0;!function(){const t=document.getElementById("canvas"),e=t.getContext("webgl2");e||alert("WebGL 2 not supported!"),l(e),T=new v(s(0,0,0),1,7,h(250/256,60/256,.0625,1)),T.create(),R=new v(s(-.4,0,1),.15,7,h(1,1,1,1)),R.create(),L=new m(s(0,0,0)),L.create(),D=new p(s(0,0,0)),D.create();const i=new w(s(0,0,5),s(0,0,0)),r=new y(t);r.setClearColor(.2,.2,.2,1),e.enable(e.DEPTH_TEST);const o=new A([new E(e.VERTEX_SHADER,n(816)),new E(e.FRAGMENT_SHADER,n(63))]);window.addEventListener("resize",(function(){r.setSize(window.innerWidth,window.innerHeight),i.setAspectRatio(window.innerWidth/window.innerHeight),i.updateProjectionMatrix()}),!1),r.setSize(window.innerWidth,window.innerHeight),i.setAspectRatio(window.innerWidth/window.innerHeight),i.updateProjectionMatrix(),function t(){C+=1,i.update(),e.viewport(0,0,window.innerWidth,window.innerHeight),r.clear(),r.render(i,o,[T],C,h(1,0,0,1),h(0,1,0,1)),requestAnimationFrame(t)}()}()})()})();
//# sourceMappingURL=bundle.js.map